{
  "status": 0,
  "updated": 1700657015,
  "author": {
    "is_followed": false,
    "badge": [
      {
        "type": "identity",
        "description": "信息技术行业 算法工程师"
      }
    ],
    "name": "Thoughts Memo",
    "url": "https://api.zhihu.com/people/4c592f496dc33822b560b382907ff1d0",
    "gender": 1,
    "user_type": "people",
    "headline": "学校≠教育≠技能；文凭溢价=80%信号传递+20%人力资本",
    "avatar_url": "https://pica.zhimg.com/50/v2-41f893b0cd84fb6a8c8f6d1bd29c9554_l.jpg?source=b1748391",
    "is_following": false,
    "type": "people",
    "id": "4c592f496dc33822b560b382907ff1d0"
  },
  "can_tip": false,
  "excerpt": "阅读须知：该教程只适用于 Anki 2.1.62-2.1.66。新版本的教程在此：Anki 新算法 FSR…",
  "tipjarors_count": 0,
  "admin_closed_comment": false,
  "reason": "",
  "excerpt_title": "",
  "id": 636564830,
  "voteup_count": 340,
  "can_comment": {
    "status": true,
    "reason": ""
  },
  "created": 1686578510,
  "url": "https://api.zhihu.com/articles/636564830",
  "comment_permission": "all",
  "title": "FSRS4Anki 使用指北",
  "image_width": 1429,
  "content": "<p data-pid=\"TsceC_hy\">阅读须知：该教程只适用于 Anki 2.1.62-2.1.66。新版本的教程在此：<a href=\"https://zhuanlan.zhihu.com/p/664758200\" class=\"internal\">Anki 新算法 FSRS 配置指南</a>。</p><h2>0 介绍</h2><p data-pid=\"-eldXLXR\">FSRS4Anki，即 Free Spaced Repetition Scheduler for Anki，一款能在 Anki 上运行的自由、开源的间隔重复调度算法。相较于 Anki 内置的、有着长达 30 年历史的 SM-2 算法，FSRS 更新、更准、更强。</p><p data-pid=\"-aBuMBvB\">FSRS4Anki 主要分为三个部分：Scheduler（调度器）、Optimizer（优化器）和 Helper（助手插件）。</p><ul><li data-pid=\"iMvIMRqT\">Scheduler 可以根据当前卡片的记忆状态、复习间隔和复习打分来预测记忆状态的变化，并给出合适的复习间隔。</li><li data-pid=\"bKH7rB3F\">Optimizer 可以根据学习者上传的历史复习记录，生成拟合学习者记忆情况的模型权重。</li><li data-pid=\"4AkEpVUw\">Helper 以 FSRS 记忆状态为核心，允许学习者更加灵活地复习。</li></ul><p data-pid=\"4lx_TDCg\">以下是 FSRS4Anki 的使用教程。</p><h2>1 快速上手</h2><h3>1.1 开启 Anki 的 V3 排程算法</h3><p data-pid=\"Kuhr2Ch4\">勾选<code>设置&gt;复习&gt;启用 V3 排程算法</code> </p><figure data-size=\"normal\"><img src=\"https://picx.zhimg.com/v2-dfe932d39e85a2d38632c8399f2f5f33_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"639\" data-rawheight=\"693\" class=\"origin_image zh-lightbox-thumb\" width=\"639\" data-original=\"https://picx.zhimg.com/v2-dfe932d39e85a2d38632c8399f2f5f33_r.jpg\" data-original-token=\"v2-dfe932d39e85a2d38632c8399f2f5f33\"/></figure><h3>1.2 粘贴 FSRS 算法代码</h3><figure data-size=\"normal\"><img src=\"https://pica.zhimg.com/v2-42fb9d2cbf89ea427b4504df273477a0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"828\" class=\"origin_image zh-lightbox-thumb\" width=\"800\" data-original=\"https://pica.zhimg.com/v2-42fb9d2cbf89ea427b4504df273477a0_r.jpg\" data-original-token=\"v2-42fb9d2cbf89ea427b4504df273477a0\"/></figure><p data-pid=\"PlTVwDNa\">在牌组选项中，找到高级设置一栏，在自定义排程中粘贴以下代码：</p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"c1\">// FSRS4Anki v4.3.0 Scheduler Qt6\n</span><span class=\"c1\"></span><span class=\"nx\">set_version</span><span class=\"p\">();</span>\n<span class=\"c1\">// The latest version will be released on https://github.com/open-spaced-repetition/fsrs4anki/releases/latest\n</span><span class=\"c1\"></span>\n<span class=\"c1\">// Configuration Start\n</span><span class=\"c1\"></span>\n<span class=\"kr\">const</span> <span class=\"nx\">deckParams</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n  <span class=\"p\">{</span>\n    <span class=\"c1\">// Default parameters of FSRS4Anki for global\n</span><span class=\"c1\"></span>    <span class=\"s2\">&#34;deckName&#34;</span><span class=\"o\">:</span> <span class=\"s2\">&#34;global config for FSRS4Anki&#34;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&#34;w&#34;</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"mf\">0.6</span><span class=\"p\">,</span> <span class=\"mf\">2.4</span><span class=\"p\">,</span> <span class=\"mf\">5.8</span><span class=\"p\">,</span> <span class=\"mf\">4.93</span><span class=\"p\">,</span> <span class=\"mf\">0.94</span><span class=\"p\">,</span> <span class=\"mf\">0.86</span><span class=\"p\">,</span> <span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"mf\">1.49</span><span class=\"p\">,</span> <span class=\"mf\">0.14</span><span class=\"p\">,</span> <span class=\"mf\">0.94</span><span class=\"p\">,</span> <span class=\"mf\">2.18</span><span class=\"p\">,</span> <span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"mf\">0.34</span><span class=\"p\">,</span> <span class=\"mf\">1.26</span><span class=\"p\">,</span> <span class=\"mf\">0.29</span><span class=\"p\">,</span> <span class=\"mf\">2.61</span><span class=\"p\">],</span>\n    <span class=\"c1\">// The above parameters can be optimized via FSRS4Anki optimizer.\n</span><span class=\"c1\"></span>    <span class=\"c1\">// For details about the parameters, please see: https://github.com/open-spaced-repetition/fsrs4anki/wiki/The-Algorithm\n</span><span class=\"c1\"></span>    <span class=\"c1\">// User&#39;s custom parameters for global\n</span><span class=\"c1\"></span>    <span class=\"s2\">&#34;requestRetention&#34;</span><span class=\"o\">:</span> <span class=\"mf\">0.9</span><span class=\"p\">,</span> <span class=\"c1\">// recommended setting: 0.8 ~ 0.9\n</span><span class=\"c1\"></span>    <span class=\"s2\">&#34;maximumInterval&#34;</span><span class=\"o\">:</span> <span class=\"mi\">36500</span><span class=\"p\">,</span>\n    <span class=\"c1\">// FSRS only modifies the long-term scheduling. So (re)learning steps in deck options work as usual.\n</span><span class=\"c1\"></span>    <span class=\"c1\">// I recommend setting steps shorter than 1 day.\n</span><span class=\"c1\"></span>  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"c1\">// Example 1: User&#39;s custom parameters for this deck and its sub-decks.\n</span><span class=\"c1\"></span>    <span class=\"s2\">&#34;deckName&#34;</span><span class=\"o\">:</span> <span class=\"s2\">&#34;MainDeck1&#34;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&#34;w&#34;</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"mf\">0.6</span><span class=\"p\">,</span> <span class=\"mf\">0.9</span><span class=\"p\">,</span> <span class=\"mf\">2.9</span><span class=\"p\">,</span> <span class=\"mf\">6.8</span><span class=\"p\">,</span> <span class=\"mf\">4.72</span><span class=\"p\">,</span> <span class=\"mf\">1.02</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mf\">0.04</span><span class=\"p\">,</span> <span class=\"mf\">1.49</span><span class=\"p\">,</span> <span class=\"mf\">0.17</span><span class=\"p\">,</span> <span class=\"mf\">1.02</span><span class=\"p\">,</span> <span class=\"mf\">2.15</span><span class=\"p\">,</span> <span class=\"mf\">0.07</span><span class=\"p\">,</span> <span class=\"mf\">0.35</span><span class=\"p\">,</span> <span class=\"mf\">1.17</span><span class=\"p\">,</span> <span class=\"mf\">0.32</span><span class=\"p\">,</span> <span class=\"mf\">2.53</span><span class=\"p\">],</span>\n    <span class=\"s2\">&#34;requestRetention&#34;</span><span class=\"o\">:</span> <span class=\"mf\">0.9</span><span class=\"p\">,</span>\n    <span class=\"s2\">&#34;maximumInterval&#34;</span><span class=\"o\">:</span> <span class=\"mi\">36500</span><span class=\"p\">,</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"c1\">// Example 2: User&#39;s custom parameters for this deck and its sub-decks.\n</span><span class=\"c1\"></span>    <span class=\"c1\">// Don&#39;t omit any keys.\n</span><span class=\"c1\"></span>    <span class=\"s2\">&#34;deckName&#34;</span><span class=\"o\">:</span> <span class=\"s2\">&#34;MainDeck2::SubDeck::SubSubDeck&#34;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&#34;w&#34;</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"mf\">0.6</span><span class=\"p\">,</span> <span class=\"mf\">0.9</span><span class=\"p\">,</span> <span class=\"mf\">2.9</span><span class=\"p\">,</span> <span class=\"mf\">6.8</span><span class=\"p\">,</span> <span class=\"mf\">4.72</span><span class=\"p\">,</span> <span class=\"mf\">1.02</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mf\">0.04</span><span class=\"p\">,</span> <span class=\"mf\">1.49</span><span class=\"p\">,</span> <span class=\"mf\">0.17</span><span class=\"p\">,</span> <span class=\"mf\">1.02</span><span class=\"p\">,</span> <span class=\"mf\">2.15</span><span class=\"p\">,</span> <span class=\"mf\">0.07</span><span class=\"p\">,</span> <span class=\"mf\">0.35</span><span class=\"p\">,</span> <span class=\"mf\">1.17</span><span class=\"p\">,</span> <span class=\"mf\">0.32</span><span class=\"p\">,</span> <span class=\"mf\">2.53</span><span class=\"p\">],</span>\n    <span class=\"s2\">&#34;requestRetention&#34;</span><span class=\"o\">:</span> <span class=\"mf\">0.9</span><span class=\"p\">,</span>\n    <span class=\"s2\">&#34;maximumInterval&#34;</span><span class=\"o\">:</span> <span class=\"mi\">36500</span><span class=\"p\">,</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">];</span>\n\n<span class=\"c1\">// To turn off FSRS in specific decks, fill them into the skip_decks list below.\n</span><span class=\"c1\">// Please don&#39;t remove it even if you don&#39;t need it.\n</span><span class=\"c1\"></span><span class=\"kr\">const</span> <span class=\"nx\">skip_decks</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&#34;MainDeck3&#34;</span><span class=\"p\">,</span> <span class=\"s2\">&#34;MainDeck4::SubDeck&#34;</span><span class=\"p\">];</span>\n\n<span class=\"c1\">// &#34;Fuzz&#34; is a small random delay applied to new intervals to prevent cards from\n</span><span class=\"c1\">// sticking together and always coming up for review on the same day\n</span><span class=\"c1\"></span><span class=\"kr\">const</span> <span class=\"nx\">enable_fuzz</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><span class=\"p\">;</span>\n\n<span class=\"c1\">// FSRS supports displaying memory states of cards.\n</span><span class=\"c1\">// Enable it for debugging if you encounter something wrong.\n</span><span class=\"c1\"></span><span class=\"kr\">const</span> <span class=\"nx\">display_memory_state</span> <span class=\"o\">=</span> <span class=\"kc\">false</span><span class=\"p\">;</span>\n\n<span class=\"c1\">// Configuration End\n</span><span class=\"c1\"></span>\n<span class=\"kr\">debugger</span><span class=\"p\">;</span>\n\n<span class=\"c1\">// display if FSRS is enabled\n</span><span class=\"c1\"></span><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">display_memory_state</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kr\">const</span> <span class=\"nx\">prev</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"s1\">&#39;FSRS_status&#39;</span><span class=\"p\">)</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">prev</span><span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"nx\">prev</span><span class=\"p\">.</span><span class=\"nx\">remove</span><span class=\"p\">();</span> <span class=\"p\">}</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">fsrs_status</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">createElement</span><span class=\"p\">(</span><span class=\"s1\">&#39;span&#39;</span><span class=\"p\">);</span>\n  <span class=\"nx\">fsrs_status</span><span class=\"p\">.</span><span class=\"nx\">innerHTML</span> <span class=\"o\">=</span> <span class=\"s2\">&#34;&lt;br&gt;FSRS enabled&#34;</span><span class=\"p\">;</span>\n  <span class=\"nx\">fsrs_status</span><span class=\"p\">.</span><span class=\"nx\">id</span> <span class=\"o\">=</span> <span class=\"s2\">&#34;FSRS_status&#34;</span><span class=\"p\">;</span>\n  <span class=\"nx\">fsrs_status</span><span class=\"p\">.</span><span class=\"nx\">style</span><span class=\"p\">.</span><span class=\"nx\">cssText</span> <span class=\"o\">=</span> <span class=\"s2\">&#34;font-size:12px;opacity:0.5;font-family:monospace;text-align:left;line-height:1em;&#34;</span><span class=\"p\">;</span>\n  <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">body</span><span class=\"p\">.</span><span class=\"nx\">appendChild</span><span class=\"p\">(</span><span class=\"nx\">fsrs_status</span><span class=\"p\">);</span>\n  <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"s2\">&#34;qa&#34;</span><span class=\"p\">).</span><span class=\"nx\">style</span><span class=\"p\">.</span><span class=\"nx\">cssText</span> <span class=\"o\">+=</span> <span class=\"s2\">&#34;min-height:50vh;&#34;</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">let</span> <span class=\"nx\">params</span> <span class=\"o\">=</span> <span class=\"p\">{};</span>\n<span class=\"c1\">// get the name of the card&#39;s deck\n</span><span class=\"c1\"></span><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">deck_name</span> <span class=\"o\">=</span> <span class=\"nx\">get_deckname</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">display_memory_state</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">fsrs_status</span><span class=\"p\">.</span><span class=\"nx\">innerHTML</span> <span class=\"o\">+=</span> <span class=\"s2\">&#34;&lt;br&gt;Deck name: &#34;</span> <span class=\"o\">+</span> <span class=\"nx\">deck_name</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kr\">const</span> <span class=\"nx\">i</span> <span class=\"k\">of</span> <span class=\"nx\">skip_decks</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">deck_name</span><span class=\"p\">.</span><span class=\"nx\">startsWith</span><span class=\"p\">(</span><span class=\"nx\">i</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n      <span class=\"nx\">fsrs_status</span><span class=\"p\">.</span><span class=\"nx\">innerHTML</span> <span class=\"o\">=</span> <span class=\"nx\">fsrs_status</span><span class=\"p\">.</span><span class=\"nx\">innerHTML</span><span class=\"p\">.</span><span class=\"nx\">replace</span><span class=\"p\">(</span><span class=\"s2\">&#34;FSRS enabled&#34;</span><span class=\"p\">,</span> <span class=\"s2\">&#34;FSRS disabled&#34;</span><span class=\"p\">);</span>\n      <span class=\"k\">return</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n  <span class=\"c1\">// Arrange the deckParams of sub-decks in front of their parent decks.\n</span><span class=\"c1\"></span>  <span class=\"nx\">deckParams</span><span class=\"p\">.</span><span class=\"nx\">sort</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">a</span><span class=\"p\">,</span> <span class=\"nx\">b</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"o\">-</span><span class=\"nx\">a</span><span class=\"p\">.</span><span class=\"nx\">deckName</span><span class=\"p\">.</span><span class=\"nx\">localeCompare</span><span class=\"p\">(</span><span class=\"nx\">b</span><span class=\"p\">.</span><span class=\"nx\">deckName</span><span class=\"p\">);</span>\n  <span class=\"p\">});</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">let</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">deckParams</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">deck_name</span><span class=\"p\">.</span><span class=\"nx\">startsWith</span><span class=\"p\">(</span><span class=\"nx\">deckParams</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">][</span><span class=\"s2\">&#34;deckName&#34;</span><span class=\"p\">]))</span> <span class=\"p\">{</span>\n      <span class=\"nx\">params</span> <span class=\"o\">=</span> <span class=\"nx\">deckParams</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">];</span>\n      <span class=\"k\">break</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">display_memory_state</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">fsrs_status</span><span class=\"p\">.</span><span class=\"nx\">innerHTML</span> <span class=\"o\">+=</span> <span class=\"s2\">&#34;&lt;br&gt;Deck name not found&#34;</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">keys</span><span class=\"p\">(</span><span class=\"nx\">params</span><span class=\"p\">).</span><span class=\"nx\">length</span> <span class=\"o\">===</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">params</span> <span class=\"o\">=</span> <span class=\"nx\">deckParams</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"nx\">deck</span> <span class=\"p\">=&gt;</span> <span class=\"nx\">deck</span><span class=\"p\">.</span><span class=\"nx\">deckName</span> <span class=\"o\">===</span> <span class=\"s2\">&#34;global config for FSRS4Anki&#34;</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">var</span> <span class=\"nx\">w</span> <span class=\"o\">=</span> <span class=\"nx\">params</span><span class=\"p\">[</span><span class=\"s2\">&#34;w&#34;</span><span class=\"p\">];</span>\n<span class=\"kd\">var</span> <span class=\"nx\">requestRetention</span> <span class=\"o\">=</span> <span class=\"nx\">params</span><span class=\"p\">[</span><span class=\"s2\">&#34;requestRetention&#34;</span><span class=\"p\">];</span>\n<span class=\"kd\">var</span> <span class=\"nx\">maximumInterval</span> <span class=\"o\">=</span> <span class=\"nx\">params</span><span class=\"p\">[</span><span class=\"s2\">&#34;maximumInterval&#34;</span><span class=\"p\">];</span>\n<span class=\"c1\">// auto-calculate intervalModifier\n</span><span class=\"c1\"></span><span class=\"kr\">const</span> <span class=\"nx\">intervalModifier</span> <span class=\"o\">=</span> <span class=\"mi\">9</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">/</span> <span class=\"nx\">requestRetention</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">);</span>\n<span class=\"c1\">// global fuzz factor for all ratings.\n</span><span class=\"c1\"></span><span class=\"kr\">const</span> <span class=\"nx\">fuzz_factor</span> <span class=\"o\">=</span> <span class=\"nx\">set_fuzz_factor</span><span class=\"p\">();</span>\n<span class=\"kr\">const</span> <span class=\"nx\">ratings</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s2\">&#34;again&#34;</span><span class=\"o\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n  <span class=\"s2\">&#34;hard&#34;</span><span class=\"o\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n  <span class=\"s2\">&#34;good&#34;</span><span class=\"o\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n  <span class=\"s2\">&#34;easy&#34;</span><span class=\"o\">:</span> <span class=\"mi\">4</span>\n<span class=\"p\">};</span>\n<span class=\"c1\">// For new cards\n</span><span class=\"c1\"></span><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">is_new</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n  <span class=\"nx\">init_states</span><span class=\"p\">();</span>\n  <span class=\"kr\">const</span> <span class=\"nx\">good_interval</span> <span class=\"o\">=</span> <span class=\"nx\">next_interval</span><span class=\"p\">(</span><span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">good</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">);</span>\n  <span class=\"kr\">const</span> <span class=\"nx\">easy_interval</span> <span class=\"o\">=</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">max</span><span class=\"p\">(</span><span class=\"nx\">next_interval</span><span class=\"p\">(</span><span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">easy</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">),</span> <span class=\"nx\">good_interval</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">);</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">good</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">review</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">good</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"p\">.</span><span class=\"nx\">review</span><span class=\"p\">.</span><span class=\"nx\">scheduledDays</span> <span class=\"o\">=</span> <span class=\"nx\">good_interval</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">easy</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">review</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">easy</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"p\">.</span><span class=\"nx\">review</span><span class=\"p\">.</span><span class=\"nx\">scheduledDays</span> <span class=\"o\">=</span> <span class=\"nx\">easy_interval</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"c1\">// For learning/relearning cards\n</span><span class=\"c1\"></span><span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">is_learning</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n  <span class=\"c1\">// Init states if the card didn&#39;t contain customData\n</span><span class=\"c1\"></span>  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">is_empty</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n    <span class=\"nx\">init_states</span><span class=\"p\">();</span>\n  <span class=\"p\">}</span>\n  <span class=\"kr\">const</span> <span class=\"nx\">good_interval</span> <span class=\"o\">=</span> <span class=\"nx\">next_interval</span><span class=\"p\">(</span><span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">good</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">);</span>\n  <span class=\"kr\">const</span> <span class=\"nx\">easy_interval</span> <span class=\"o\">=</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">max</span><span class=\"p\">(</span><span class=\"nx\">next_interval</span><span class=\"p\">(</span><span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">easy</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">),</span> <span class=\"nx\">good_interval</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">);</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">good</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">review</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">good</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"p\">.</span><span class=\"nx\">review</span><span class=\"p\">.</span><span class=\"nx\">scheduledDays</span> <span class=\"o\">=</span> <span class=\"nx\">good_interval</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">easy</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">review</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">easy</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"p\">.</span><span class=\"nx\">review</span><span class=\"p\">.</span><span class=\"nx\">scheduledDays</span> <span class=\"o\">=</span> <span class=\"nx\">easy_interval</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"c1\">// For review cards\n</span><span class=\"c1\"></span><span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">is_review</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n  <span class=\"c1\">// Convert the interval and factor to stability and difficulty if the card didn&#39;t contain customData\n</span><span class=\"c1\"></span>  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">is_empty</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n    <span class=\"nx\">convert_states</span><span class=\"p\">();</span>\n  <span class=\"p\">}</span>\n  <span class=\"kr\">const</span> <span class=\"nx\">interval</span> <span class=\"o\">=</span> <span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">review</span><span class=\"p\">.</span><span class=\"nx\">elapsedDays</span> <span class=\"o\">?</span> <span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"p\">.</span><span class=\"nx\">review</span><span class=\"p\">.</span><span class=\"nx\">elapsedDays</span> <span class=\"o\">:</span> <span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">filtered</span><span class=\"p\">.</span><span class=\"nx\">rescheduling</span><span class=\"p\">.</span><span class=\"nx\">originalState</span><span class=\"p\">.</span><span class=\"nx\">review</span><span class=\"p\">.</span><span class=\"nx\">elapsedDays</span><span class=\"p\">;</span>\n  <span class=\"kr\">const</span> <span class=\"nx\">last_d</span> <span class=\"o\">=</span> <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">again</span><span class=\"p\">.</span><span class=\"nx\">d</span><span class=\"p\">;</span>\n  <span class=\"kr\">const</span> <span class=\"nx\">last_s</span> <span class=\"o\">=</span> <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">again</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">;</span>\n  <span class=\"kr\">const</span> <span class=\"nx\">retrievability</span> <span class=\"o\">=</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">pow</span><span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">+</span> <span class=\"nx\">interval</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"mi\">9</span> <span class=\"o\">*</span> <span class=\"nx\">last_s</span><span class=\"p\">),</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">display_memory_state</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">fsrs_status</span><span class=\"p\">.</span><span class=\"nx\">innerHTML</span> <span class=\"o\">+=</span> <span class=\"s2\">&#34;&lt;br&gt;D: &#34;</span> <span class=\"o\">+</span> <span class=\"nx\">last_d</span> <span class=\"o\">+</span> <span class=\"s2\">&#34;&lt;br&gt;S: &#34;</span> <span class=\"o\">+</span> <span class=\"nx\">last_s</span> <span class=\"o\">+</span> <span class=\"s2\">&#34;&lt;br&gt;R: &#34;</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"nx\">retrievability</span> <span class=\"o\">*</span> <span class=\"mi\">100</span><span class=\"p\">).</span><span class=\"nx\">toFixed</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&#34;%&#34;</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">again</span><span class=\"p\">.</span><span class=\"nx\">d</span> <span class=\"o\">=</span> <span class=\"nx\">next_difficulty</span><span class=\"p\">(</span><span class=\"nx\">last_d</span><span class=\"p\">,</span> <span class=\"s2\">&#34;again&#34;</span><span class=\"p\">);</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">again</span><span class=\"p\">.</span><span class=\"nx\">s</span> <span class=\"o\">=</span> <span class=\"nx\">next_forget_stability</span><span class=\"p\">(</span><span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">again</span><span class=\"p\">.</span><span class=\"nx\">d</span><span class=\"p\">,</span> <span class=\"nx\">last_s</span><span class=\"p\">,</span> <span class=\"nx\">retrievability</span><span class=\"p\">);</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">hard</span><span class=\"p\">.</span><span class=\"nx\">d</span> <span class=\"o\">=</span> <span class=\"nx\">next_difficulty</span><span class=\"p\">(</span><span class=\"nx\">last_d</span><span class=\"p\">,</span> <span class=\"s2\">&#34;hard&#34;</span><span class=\"p\">);</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">hard</span><span class=\"p\">.</span><span class=\"nx\">s</span> <span class=\"o\">=</span> <span class=\"nx\">next_recall_stability</span><span class=\"p\">(</span><span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">hard</span><span class=\"p\">.</span><span class=\"nx\">d</span><span class=\"p\">,</span> <span class=\"nx\">last_s</span><span class=\"p\">,</span> <span class=\"nx\">retrievability</span><span class=\"p\">,</span> <span class=\"s2\">&#34;hard&#34;</span><span class=\"p\">);</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">good</span><span class=\"p\">.</span><span class=\"nx\">d</span> <span class=\"o\">=</span> <span class=\"nx\">next_difficulty</span><span class=\"p\">(</span><span class=\"nx\">last_d</span><span class=\"p\">,</span> <span class=\"s2\">&#34;good&#34;</span><span class=\"p\">);</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">good</span><span class=\"p\">.</span><span class=\"nx\">s</span> <span class=\"o\">=</span> <span class=\"nx\">next_recall_stability</span><span class=\"p\">(</span><span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">good</span><span class=\"p\">.</span><span class=\"nx\">d</span><span class=\"p\">,</span> <span class=\"nx\">last_s</span><span class=\"p\">,</span> <span class=\"nx\">retrievability</span><span class=\"p\">,</span> <span class=\"s2\">&#34;good&#34;</span><span class=\"p\">);</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">easy</span><span class=\"p\">.</span><span class=\"nx\">d</span> <span class=\"o\">=</span> <span class=\"nx\">next_difficulty</span><span class=\"p\">(</span><span class=\"nx\">last_d</span><span class=\"p\">,</span> <span class=\"s2\">&#34;easy&#34;</span><span class=\"p\">);</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">easy</span><span class=\"p\">.</span><span class=\"nx\">s</span> <span class=\"o\">=</span> <span class=\"nx\">next_recall_stability</span><span class=\"p\">(</span><span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">easy</span><span class=\"p\">.</span><span class=\"nx\">d</span><span class=\"p\">,</span> <span class=\"nx\">last_s</span><span class=\"p\">,</span> <span class=\"nx\">retrievability</span><span class=\"p\">,</span> <span class=\"s2\">&#34;easy&#34;</span><span class=\"p\">);</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">hard_interval</span> <span class=\"o\">=</span> <span class=\"nx\">next_interval</span><span class=\"p\">(</span><span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">hard</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">);</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">good_interval</span> <span class=\"o\">=</span> <span class=\"nx\">next_interval</span><span class=\"p\">(</span><span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">good</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">);</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">easy_interval</span> <span class=\"o\">=</span> <span class=\"nx\">next_interval</span><span class=\"p\">(</span><span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">easy</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">);</span>\n  <span class=\"nx\">hard_interval</span> <span class=\"o\">=</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">min</span><span class=\"p\">(</span><span class=\"nx\">hard_interval</span><span class=\"p\">,</span> <span class=\"nx\">good_interval</span><span class=\"p\">)</span>\n  <span class=\"nx\">good_interval</span> <span class=\"o\">=</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">max</span><span class=\"p\">(</span><span class=\"nx\">good_interval</span><span class=\"p\">,</span> <span class=\"nx\">hard_interval</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">);</span>\n  <span class=\"nx\">easy_interval</span> <span class=\"o\">=</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">max</span><span class=\"p\">(</span><span class=\"nx\">easy_interval</span><span class=\"p\">,</span> <span class=\"nx\">good_interval</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">);</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">hard</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">review</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">hard</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"p\">.</span><span class=\"nx\">review</span><span class=\"p\">.</span><span class=\"nx\">scheduledDays</span> <span class=\"o\">=</span> <span class=\"nx\">hard_interval</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">good</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">review</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">good</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"p\">.</span><span class=\"nx\">review</span><span class=\"p\">.</span><span class=\"nx\">scheduledDays</span> <span class=\"o\">=</span> <span class=\"nx\">good_interval</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">easy</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">review</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">easy</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"p\">.</span><span class=\"nx\">review</span><span class=\"p\">.</span><span class=\"nx\">scheduledDays</span> <span class=\"o\">=</span> <span class=\"nx\">easy_interval</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">function</span> <span class=\"nx\">constrain_difficulty</span><span class=\"p\">(</span><span class=\"nx\">difficulty</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">min</span><span class=\"p\">(</span><span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">max</span><span class=\"p\">(</span><span class=\"o\">+</span><span class=\"nx\">difficulty</span><span class=\"p\">.</span><span class=\"nx\">toFixed</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"mi\">10</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">function</span> <span class=\"nx\">apply_fuzz</span><span class=\"p\">(</span><span class=\"nx\">ivl</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">enable_fuzz</span> <span class=\"o\">||</span> <span class=\"nx\">ivl</span> <span class=\"o\">&lt;</span> <span class=\"mf\">2.5</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"nx\">ivl</span><span class=\"p\">;</span>\n  <span class=\"nx\">ivl</span> <span class=\"o\">=</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">round</span><span class=\"p\">(</span><span class=\"nx\">ivl</span><span class=\"p\">);</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">min_ivl</span> <span class=\"o\">=</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">max</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">round</span><span class=\"p\">(</span><span class=\"nx\">ivl</span> <span class=\"o\">*</span> <span class=\"mf\">0.95</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">));</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">max_ivl</span> <span class=\"o\">=</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">round</span><span class=\"p\">(</span><span class=\"nx\">ivl</span> <span class=\"o\">*</span> <span class=\"mf\">1.05</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">);</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">is_review</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n    <span class=\"kr\">const</span> <span class=\"nx\">scheduledDays</span> <span class=\"o\">=</span> <span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">review</span><span class=\"p\">.</span><span class=\"nx\">scheduledDays</span> <span class=\"o\">?</span> <span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"p\">.</span><span class=\"nx\">review</span><span class=\"p\">.</span><span class=\"nx\">scheduledDays</span> <span class=\"o\">:</span> <span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">filtered</span><span class=\"p\">.</span><span class=\"nx\">rescheduling</span><span class=\"p\">.</span><span class=\"nx\">originalState</span><span class=\"p\">.</span><span class=\"nx\">review</span><span class=\"p\">.</span><span class=\"nx\">scheduledDays</span><span class=\"p\">;</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">ivl</span> <span class=\"o\">&gt;</span> <span class=\"nx\">scheduledDays</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"nx\">min_ivl</span> <span class=\"o\">=</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">max</span><span class=\"p\">(</span><span class=\"nx\">min_ivl</span><span class=\"p\">,</span> <span class=\"nx\">scheduledDays</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">return</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">floor</span><span class=\"p\">(</span><span class=\"nx\">fuzz_factor</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"nx\">max_ivl</span> <span class=\"o\">-</span> <span class=\"nx\">min_ivl</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"nx\">min_ivl</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">function</span> <span class=\"nx\">next_interval</span><span class=\"p\">(</span><span class=\"nx\">stability</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kr\">const</span> <span class=\"nx\">new_interval</span> <span class=\"o\">=</span> <span class=\"nx\">apply_fuzz</span><span class=\"p\">(</span><span class=\"nx\">stability</span> <span class=\"o\">*</span> <span class=\"nx\">intervalModifier</span><span class=\"p\">);</span>\n  <span class=\"k\">return</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">min</span><span class=\"p\">(</span><span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">max</span><span class=\"p\">(</span><span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">round</span><span class=\"p\">(</span><span class=\"nx\">new_interval</span><span class=\"p\">),</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"nx\">maximumInterval</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">function</span> <span class=\"nx\">next_difficulty</span><span class=\"p\">(</span><span class=\"nx\">d</span><span class=\"p\">,</span> <span class=\"nx\">rating</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">next_d</span> <span class=\"o\">=</span> <span class=\"nx\">d</span> <span class=\"o\">-</span> <span class=\"nx\">w</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"nx\">ratings</span><span class=\"p\">[</span><span class=\"nx\">rating</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">3</span><span class=\"p\">);</span>\n  <span class=\"k\">return</span> <span class=\"nx\">constrain_difficulty</span><span class=\"p\">(</span><span class=\"nx\">mean_reversion</span><span class=\"p\">(</span><span class=\"nx\">w</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"nx\">next_d</span><span class=\"p\">));</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">function</span> <span class=\"nx\">mean_reversion</span><span class=\"p\">(</span><span class=\"nx\">init</span><span class=\"p\">,</span> <span class=\"nx\">current</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"nx\">w</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nx\">init</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"nx\">w</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">])</span> <span class=\"o\">*</span> <span class=\"nx\">current</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">function</span> <span class=\"nx\">next_recall_stability</span><span class=\"p\">(</span><span class=\"nx\">d</span><span class=\"p\">,</span> <span class=\"nx\">s</span><span class=\"p\">,</span> <span class=\"nx\">r</span><span class=\"p\">,</span> <span class=\"nx\">rating</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">hardPenalty</span> <span class=\"o\">=</span> <span class=\"nx\">rating</span> <span class=\"o\">===</span> <span class=\"s2\">&#34;hard&#34;</span> <span class=\"o\">?</span> <span class=\"nx\">w</span><span class=\"p\">[</span><span class=\"mi\">15</span><span class=\"p\">]</span> <span class=\"o\">:</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">easyBonus</span> <span class=\"o\">=</span> <span class=\"nx\">rating</span> <span class=\"o\">===</span> <span class=\"s2\">&#34;easy&#34;</span> <span class=\"o\">?</span> <span class=\"nx\">w</span><span class=\"p\">[</span><span class=\"mi\">16</span><span class=\"p\">]</span> <span class=\"o\">:</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"k\">return</span> <span class=\"o\">+</span><span class=\"p\">(</span><span class=\"nx\">s</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">+</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">exp</span><span class=\"p\">(</span><span class=\"nx\">w</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">])</span> <span class=\"o\">*</span>\n    <span class=\"p\">(</span><span class=\"mi\">11</span> <span class=\"o\">-</span> <span class=\"nx\">d</span><span class=\"p\">)</span> <span class=\"o\">*</span>\n    <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">pow</span><span class=\"p\">(</span><span class=\"nx\">s</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"nx\">w</span><span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">])</span> <span class=\"o\">*</span>\n    <span class=\"p\">(</span><span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">exp</span><span class=\"p\">((</span><span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"nx\">r</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">w</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">])</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">*</span>\n    <span class=\"nx\">hardPenalty</span> <span class=\"o\">*</span>\n    <span class=\"nx\">easyBonus</span><span class=\"p\">)).</span><span class=\"nx\">toFixed</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">function</span> <span class=\"nx\">next_forget_stability</span><span class=\"p\">(</span><span class=\"nx\">d</span><span class=\"p\">,</span> <span class=\"nx\">s</span><span class=\"p\">,</span> <span class=\"nx\">r</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"o\">+</span><span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">min</span><span class=\"p\">(</span><span class=\"nx\">w</span><span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">]</span> <span class=\"o\">*</span> \n    <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">pow</span><span class=\"p\">(</span><span class=\"nx\">d</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"nx\">w</span><span class=\"p\">[</span><span class=\"mi\">12</span><span class=\"p\">])</span> <span class=\"o\">*</span> \n    <span class=\"p\">(</span><span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">pow</span><span class=\"p\">(</span><span class=\"nx\">s</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"nx\">w</span><span class=\"p\">[</span><span class=\"mi\">13</span><span class=\"p\">])</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">*</span> \n    <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">exp</span><span class=\"p\">((</span><span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"nx\">r</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">w</span><span class=\"p\">[</span><span class=\"mi\">14</span><span class=\"p\">]),</span> <span class=\"nx\">s</span><span class=\"p\">).</span><span class=\"nx\">toFixed</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">function</span> <span class=\"nx\">init_states</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">again</span><span class=\"p\">.</span><span class=\"nx\">d</span> <span class=\"o\">=</span> <span class=\"nx\">init_difficulty</span><span class=\"p\">(</span><span class=\"s2\">&#34;again&#34;</span><span class=\"p\">);</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">again</span><span class=\"p\">.</span><span class=\"nx\">s</span> <span class=\"o\">=</span> <span class=\"nx\">init_stability</span><span class=\"p\">(</span><span class=\"s2\">&#34;again&#34;</span><span class=\"p\">);</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">hard</span><span class=\"p\">.</span><span class=\"nx\">d</span> <span class=\"o\">=</span> <span class=\"nx\">init_difficulty</span><span class=\"p\">(</span><span class=\"s2\">&#34;hard&#34;</span><span class=\"p\">);</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">hard</span><span class=\"p\">.</span><span class=\"nx\">s</span> <span class=\"o\">=</span> <span class=\"nx\">init_stability</span><span class=\"p\">(</span><span class=\"s2\">&#34;hard&#34;</span><span class=\"p\">);</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">good</span><span class=\"p\">.</span><span class=\"nx\">d</span> <span class=\"o\">=</span> <span class=\"nx\">init_difficulty</span><span class=\"p\">(</span><span class=\"s2\">&#34;good&#34;</span><span class=\"p\">);</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">good</span><span class=\"p\">.</span><span class=\"nx\">s</span> <span class=\"o\">=</span> <span class=\"nx\">init_stability</span><span class=\"p\">(</span><span class=\"s2\">&#34;good&#34;</span><span class=\"p\">);</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">easy</span><span class=\"p\">.</span><span class=\"nx\">d</span> <span class=\"o\">=</span> <span class=\"nx\">init_difficulty</span><span class=\"p\">(</span><span class=\"s2\">&#34;easy&#34;</span><span class=\"p\">);</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">easy</span><span class=\"p\">.</span><span class=\"nx\">s</span> <span class=\"o\">=</span> <span class=\"nx\">init_stability</span><span class=\"p\">(</span><span class=\"s2\">&#34;easy&#34;</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">function</span> <span class=\"nx\">init_difficulty</span><span class=\"p\">(</span><span class=\"nx\">rating</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"o\">+</span><span class=\"nx\">constrain_difficulty</span><span class=\"p\">(</span><span class=\"nx\">w</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"nx\">w</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"nx\">ratings</span><span class=\"p\">[</span><span class=\"nx\">rating</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">3</span><span class=\"p\">)).</span><span class=\"nx\">toFixed</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">function</span> <span class=\"nx\">init_stability</span><span class=\"p\">(</span><span class=\"nx\">rating</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"o\">+</span><span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">max</span><span class=\"p\">(</span><span class=\"nx\">w</span><span class=\"p\">[</span><span class=\"nx\">ratings</span><span class=\"p\">[</span><span class=\"nx\">rating</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"mf\">0.1</span><span class=\"p\">).</span><span class=\"nx\">toFixed</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">function</span> <span class=\"nx\">convert_states</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"kr\">const</span> <span class=\"nx\">scheduledDays</span> <span class=\"o\">=</span> <span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">normal</span> <span class=\"o\">?</span> <span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"p\">.</span><span class=\"nx\">review</span><span class=\"p\">.</span><span class=\"nx\">scheduledDays</span> <span class=\"o\">:</span> <span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">filtered</span><span class=\"p\">.</span><span class=\"nx\">rescheduling</span><span class=\"p\">.</span><span class=\"nx\">originalState</span><span class=\"p\">.</span><span class=\"nx\">review</span><span class=\"p\">.</span><span class=\"nx\">scheduledDays</span><span class=\"p\">;</span>\n  <span class=\"kr\">const</span> <span class=\"nx\">easeFactor</span> <span class=\"o\">=</span> <span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">normal</span> <span class=\"o\">?</span> <span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"p\">.</span><span class=\"nx\">review</span><span class=\"p\">.</span><span class=\"nx\">easeFactor</span> <span class=\"o\">:</span> <span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">filtered</span><span class=\"p\">.</span><span class=\"nx\">rescheduling</span><span class=\"p\">.</span><span class=\"nx\">originalState</span><span class=\"p\">.</span><span class=\"nx\">review</span><span class=\"p\">.</span><span class=\"nx\">easeFactor</span><span class=\"p\">;</span>\n  <span class=\"kr\">const</span> <span class=\"nx\">old_s</span> <span class=\"o\">=</span> <span class=\"o\">+</span><span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">max</span><span class=\"p\">(</span><span class=\"nx\">scheduledDays</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">).</span><span class=\"nx\">toFixed</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">);</span>\n  <span class=\"kr\">const</span> <span class=\"nx\">old_d</span> <span class=\"o\">=</span> <span class=\"nx\">constrain_difficulty</span><span class=\"p\">(</span><span class=\"mi\">11</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"nx\">easeFactor</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">exp</span><span class=\"p\">(</span><span class=\"nx\">w</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">])</span> <span class=\"o\">*</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">pow</span><span class=\"p\">(</span><span class=\"nx\">old_s</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"nx\">w</span><span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">])</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">exp</span><span class=\"p\">(</span><span class=\"mf\">0.1</span> <span class=\"o\">*</span> <span class=\"nx\">w</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">])</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)));</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">again</span><span class=\"p\">.</span><span class=\"nx\">d</span> <span class=\"o\">=</span> <span class=\"nx\">old_d</span><span class=\"p\">;</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">again</span><span class=\"p\">.</span><span class=\"nx\">s</span> <span class=\"o\">=</span> <span class=\"nx\">old_s</span><span class=\"p\">;</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">hard</span><span class=\"p\">.</span><span class=\"nx\">d</span> <span class=\"o\">=</span> <span class=\"nx\">old_d</span><span class=\"p\">;</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">hard</span><span class=\"p\">.</span><span class=\"nx\">s</span> <span class=\"o\">=</span> <span class=\"nx\">old_s</span><span class=\"p\">;</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">good</span><span class=\"p\">.</span><span class=\"nx\">d</span> <span class=\"o\">=</span> <span class=\"nx\">old_d</span><span class=\"p\">;</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">good</span><span class=\"p\">.</span><span class=\"nx\">s</span> <span class=\"o\">=</span> <span class=\"nx\">old_s</span><span class=\"p\">;</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">easy</span><span class=\"p\">.</span><span class=\"nx\">d</span> <span class=\"o\">=</span> <span class=\"nx\">old_d</span><span class=\"p\">;</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">easy</span><span class=\"p\">.</span><span class=\"nx\">s</span> <span class=\"o\">=</span> <span class=\"nx\">old_s</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">function</span> <span class=\"nx\">is_new</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"k\">new</span> <span class=\"o\">!==</span> <span class=\"kc\">undefined</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"k\">new</span> <span class=\"o\">!==</span> <span class=\"kc\">null</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">return</span> <span class=\"kc\">true</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">filtered</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">rescheduling</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">originalState</span> <span class=\"o\">!==</span> <span class=\"kc\">undefined</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">hasOwn</span><span class=\"p\">(</span><span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">filtered</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">rescheduling</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">originalState</span><span class=\"p\">,</span> <span class=\"s1\">&#39;new&#39;</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n      <span class=\"k\">return</span> <span class=\"kc\">true</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">return</span> <span class=\"kc\">false</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">function</span> <span class=\"nx\">is_learning</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">learning</span> <span class=\"o\">!==</span> <span class=\"kc\">undefined</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">learning</span> <span class=\"o\">!==</span> <span class=\"kc\">null</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">return</span> <span class=\"kc\">true</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">filtered</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">rescheduling</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">originalState</span> <span class=\"o\">!==</span> <span class=\"kc\">undefined</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">hasOwn</span><span class=\"p\">(</span><span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">filtered</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">rescheduling</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">originalState</span><span class=\"p\">,</span> <span class=\"s1\">&#39;learning&#39;</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n      <span class=\"k\">return</span> <span class=\"kc\">true</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">relearning</span> <span class=\"o\">!==</span> <span class=\"kc\">undefined</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">relearning</span> <span class=\"o\">!==</span> <span class=\"kc\">null</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">return</span> <span class=\"kc\">true</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">filtered</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">rescheduling</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">originalState</span> <span class=\"o\">!==</span> <span class=\"kc\">undefined</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">hasOwn</span><span class=\"p\">(</span><span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">filtered</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">rescheduling</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">originalState</span><span class=\"p\">,</span> <span class=\"s1\">&#39;relearning&#39;</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n      <span class=\"k\">return</span> <span class=\"kc\">true</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">return</span> <span class=\"kc\">false</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">function</span> <span class=\"nx\">is_review</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">review</span> <span class=\"o\">!==</span> <span class=\"kc\">undefined</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">normal</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">review</span> <span class=\"o\">!==</span> <span class=\"kc\">null</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">return</span> <span class=\"kc\">true</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">filtered</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">rescheduling</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">originalState</span> <span class=\"o\">!==</span> <span class=\"kc\">undefined</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">hasOwn</span><span class=\"p\">(</span><span class=\"nx\">states</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">filtered</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">rescheduling</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"nx\">originalState</span><span class=\"p\">,</span> <span class=\"s1\">&#39;review&#39;</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n      <span class=\"k\">return</span> <span class=\"kc\">true</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">return</span> <span class=\"kc\">false</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">function</span> <span class=\"nx\">is_empty</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"o\">!</span><span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">again</span><span class=\"p\">.</span><span class=\"nx\">d</span> <span class=\"o\">|</span> <span class=\"o\">!</span><span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">again</span><span class=\"p\">.</span><span class=\"nx\">s</span> <span class=\"o\">|</span> <span class=\"o\">!</span><span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">hard</span><span class=\"p\">.</span><span class=\"nx\">d</span> <span class=\"o\">|</span> <span class=\"o\">!</span><span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">hard</span><span class=\"p\">.</span><span class=\"nx\">s</span> <span class=\"o\">|</span> <span class=\"o\">!</span><span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">good</span><span class=\"p\">.</span><span class=\"nx\">d</span> <span class=\"o\">|</span> <span class=\"o\">!</span><span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">good</span><span class=\"p\">.</span><span class=\"nx\">s</span> <span class=\"o\">|</span> <span class=\"o\">!</span><span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">easy</span><span class=\"p\">.</span><span class=\"nx\">d</span> <span class=\"o\">|</span> <span class=\"o\">!</span><span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">easy</span><span class=\"p\">.</span><span class=\"nx\">s</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">function</span> <span class=\"nx\">set_version</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"kr\">const</span> <span class=\"nx\">version</span> <span class=\"o\">=</span> <span class=\"s2\">&#34;v4.3.0&#34;</span><span class=\"p\">;</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">again</span><span class=\"p\">.</span><span class=\"nx\">v</span> <span class=\"o\">=</span> <span class=\"nx\">version</span><span class=\"p\">;</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">hard</span><span class=\"p\">.</span><span class=\"nx\">v</span> <span class=\"o\">=</span> <span class=\"nx\">version</span><span class=\"p\">;</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">good</span><span class=\"p\">.</span><span class=\"nx\">v</span> <span class=\"o\">=</span> <span class=\"nx\">version</span><span class=\"p\">;</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">easy</span><span class=\"p\">.</span><span class=\"nx\">v</span> <span class=\"o\">=</span> <span class=\"nx\">version</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">function</span> <span class=\"nx\">get_deckname</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">typeof</span> <span class=\"nx\">ctx</span> <span class=\"o\">!==</span> <span class=\"s1\">&#39;undefined&#39;</span> <span class=\"o\">&amp;&amp;</span> <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">deckName</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">deckName</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"s2\">&#34;deck&#34;</span><span class=\"p\">)</span> <span class=\"o\">!==</span> <span class=\"kc\">null</span> <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"s2\">&#34;deck&#34;</span><span class=\"p\">).</span><span class=\"nx\">getAttribute</span><span class=\"p\">(</span><span class=\"s2\">&#34;deck_name&#34;</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"s2\">&#34;deck&#34;</span><span class=\"p\">).</span><span class=\"nx\">getAttribute</span><span class=\"p\">(</span><span class=\"s2\">&#34;deck_name&#34;</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"kc\">null</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">function</span> <span class=\"nx\">get_seed</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">again</span><span class=\"p\">.</span><span class=\"nx\">seed</span> <span class=\"o\">|</span> <span class=\"o\">!</span><span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">hard</span><span class=\"p\">.</span><span class=\"nx\">seed</span> <span class=\"o\">|</span> <span class=\"o\">!</span><span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">good</span><span class=\"p\">.</span><span class=\"nx\">seed</span> <span class=\"o\">|</span> <span class=\"o\">!</span><span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">easy</span><span class=\"p\">.</span><span class=\"nx\">seed</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">typeof</span> <span class=\"nx\">ctx</span> <span class=\"o\">!==</span> <span class=\"s1\">&#39;undefined&#39;</span> <span class=\"o\">&amp;&amp;</span> <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">seed</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">return</span> <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">seed</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n      <span class=\"k\">return</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"s2\">&#34;qa&#34;</span><span class=\"p\">).</span><span class=\"nx\">innerText</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">good</span><span class=\"p\">.</span><span class=\"nx\">seed</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">function</span> <span class=\"nx\">set_fuzz_factor</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"c1\">// Note: Originally copied from seedrandom.js package (https://github.com/davidbau/seedrandom)\n</span><span class=\"c1\"></span>  <span class=\"o\">!</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">f</span><span class=\"p\">,</span><span class=\"nx\">a</span><span class=\"p\">,</span><span class=\"nx\">c</span><span class=\"p\">){</span><span class=\"kd\">var</span> <span class=\"nx\">s</span><span class=\"p\">,</span><span class=\"nx\">l</span><span class=\"o\">=</span><span class=\"mi\">256</span><span class=\"p\">,</span><span class=\"nx\">p</span><span class=\"o\">=</span><span class=\"s2\">&#34;random&#34;</span><span class=\"p\">,</span><span class=\"nx\">d</span><span class=\"o\">=</span><span class=\"nx\">c</span><span class=\"p\">.</span><span class=\"nx\">pow</span><span class=\"p\">(</span><span class=\"nx\">l</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">),</span><span class=\"nx\">g</span><span class=\"o\">=</span><span class=\"nx\">c</span><span class=\"p\">.</span><span class=\"nx\">pow</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">52</span><span class=\"p\">),</span><span class=\"nx\">y</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"nx\">g</span><span class=\"p\">,</span><span class=\"nx\">h</span><span class=\"o\">=</span><span class=\"nx\">l</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"kd\">function</span> <span class=\"nx\">n</span><span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"p\">,</span><span class=\"nx\">t</span><span class=\"p\">,</span><span class=\"nx\">r</span><span class=\"p\">){</span><span class=\"kd\">function</span> <span class=\"nx\">e</span><span class=\"p\">(){</span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">n</span><span class=\"o\">=</span><span class=\"nx\">u</span><span class=\"p\">.</span><span class=\"nx\">g</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">),</span><span class=\"nx\">t</span><span class=\"o\">=</span><span class=\"nx\">d</span><span class=\"p\">,</span><span class=\"nx\">r</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"nx\">n</span><span class=\"o\">&lt;</span><span class=\"nx\">g</span><span class=\"p\">;)</span><span class=\"nx\">n</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"o\">+</span><span class=\"nx\">r</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"nx\">l</span><span class=\"p\">,</span><span class=\"nx\">t</span><span class=\"o\">*=</span><span class=\"nx\">l</span><span class=\"p\">,</span><span class=\"nx\">r</span><span class=\"o\">=</span><span class=\"nx\">u</span><span class=\"p\">.</span><span class=\"nx\">g</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span><span class=\"k\">for</span><span class=\"p\">(;</span><span class=\"nx\">y</span><span class=\"o\">&lt;=</span><span class=\"nx\">n</span><span class=\"p\">;)</span><span class=\"nx\">n</span><span class=\"o\">/=</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"nx\">t</span><span class=\"o\">/=</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"nx\">r</span><span class=\"o\">&gt;&gt;&gt;=</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"k\">return</span><span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"o\">+</span><span class=\"nx\">r</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"nx\">t</span><span class=\"p\">}</span><span class=\"kd\">var</span> <span class=\"nx\">o</span><span class=\"o\">=</span><span class=\"p\">[],</span><span class=\"nx\">i</span><span class=\"o\">=</span><span class=\"nx\">j</span><span class=\"p\">(</span><span class=\"kd\">function</span> <span class=\"nx\">n</span><span class=\"p\">(</span><span class=\"nx\">t</span><span class=\"p\">,</span><span class=\"nx\">r</span><span class=\"p\">){</span><span class=\"kd\">var</span> <span class=\"nx\">e</span><span class=\"p\">,</span><span class=\"nx\">o</span><span class=\"o\">=</span><span class=\"p\">[],</span><span class=\"nx\">i</span><span class=\"o\">=</span><span class=\"k\">typeof</span> <span class=\"nx\">t</span><span class=\"p\">;</span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">r</span><span class=\"o\">&amp;&amp;</span><span class=\"s2\">&#34;object&#34;</span><span class=\"o\">==</span><span class=\"nx\">i</span><span class=\"p\">)</span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"nx\">e</span> <span class=\"k\">in</span> <span class=\"nx\">t</span><span class=\"p\">)</span><span class=\"k\">try</span><span class=\"p\">{</span><span class=\"nx\">o</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"p\">(</span><span class=\"nx\">t</span><span class=\"p\">[</span><span class=\"nx\">e</span><span class=\"p\">],</span><span class=\"nx\">r</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">))}</span><span class=\"k\">catch</span><span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"p\">){}</span><span class=\"k\">return</span> <span class=\"nx\">o</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"o\">?</span><span class=\"nx\">o</span><span class=\"o\">:</span><span class=\"s2\">&#34;string&#34;</span><span class=\"o\">==</span><span class=\"nx\">i</span><span class=\"o\">?</span><span class=\"nx\">t</span><span class=\"o\">:</span><span class=\"nx\">t</span><span class=\"o\">+</span><span class=\"s2\">&#34;\\0&#34;</span><span class=\"p\">}((</span><span class=\"nx\">t</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"o\">==</span><span class=\"nx\">t</span><span class=\"o\">?</span><span class=\"p\">{</span><span class=\"nx\">entropy</span><span class=\"o\">:!</span><span class=\"mi\">0</span><span class=\"p\">}</span><span class=\"o\">:</span><span class=\"nx\">t</span><span class=\"o\">||</span><span class=\"p\">{}).</span><span class=\"nx\">entropy</span><span class=\"o\">?</span><span class=\"p\">[</span><span class=\"nx\">n</span><span class=\"p\">,</span><span class=\"nx\">S</span><span class=\"p\">(</span><span class=\"nx\">a</span><span class=\"p\">)]</span><span class=\"o\">:</span><span class=\"kc\">null</span><span class=\"o\">==</span><span class=\"nx\">n</span><span class=\"o\">?</span><span class=\"kd\">function</span><span class=\"p\">(){</span><span class=\"k\">try</span><span class=\"p\">{</span><span class=\"kd\">var</span> <span class=\"nx\">n</span><span class=\"p\">;</span><span class=\"k\">return</span> <span class=\"nx\">s</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"o\">=</span><span class=\"nx\">s</span><span class=\"p\">.</span><span class=\"nx\">randomBytes</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"nx\">n</span><span class=\"o\">=</span><span class=\"nx\">n</span><span class=\"p\">(</span><span class=\"nx\">l</span><span class=\"p\">)</span><span class=\"o\">:</span><span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"o\">=</span><span class=\"k\">new</span> <span class=\"nx\">Uint8Array</span><span class=\"p\">(</span><span class=\"nx\">l</span><span class=\"p\">),(</span><span class=\"nx\">f</span><span class=\"p\">.</span><span class=\"nx\">crypto</span><span class=\"o\">||</span><span class=\"nx\">f</span><span class=\"p\">.</span><span class=\"nx\">msCrypto</span><span class=\"p\">).</span><span class=\"nx\">getRandomValues</span><span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"p\">)),</span><span class=\"nx\">S</span><span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"p\">)}</span><span class=\"k\">catch</span><span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"p\">){</span><span class=\"kd\">var</span> <span class=\"nx\">t</span><span class=\"o\">=</span><span class=\"nx\">f</span><span class=\"p\">.</span><span class=\"nx\">navigator</span><span class=\"p\">,</span><span class=\"nx\">r</span><span class=\"o\">=</span><span class=\"nx\">t</span><span class=\"o\">&amp;&amp;</span><span class=\"nx\">t</span><span class=\"p\">.</span><span class=\"nx\">plugins</span><span class=\"p\">;</span><span class=\"k\">return</span><span class=\"p\">[</span><span class=\"o\">+</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">,</span><span class=\"nx\">f</span><span class=\"p\">,</span><span class=\"nx\">r</span><span class=\"p\">,</span><span class=\"nx\">f</span><span class=\"p\">.</span><span class=\"nx\">screen</span><span class=\"p\">,</span><span class=\"nx\">S</span><span class=\"p\">(</span><span class=\"nx\">a</span><span class=\"p\">)]}}()</span><span class=\"o\">:</span><span class=\"nx\">n</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"nx\">o</span><span class=\"p\">),</span><span class=\"nx\">u</span><span class=\"o\">=</span><span class=\"k\">new</span> <span class=\"nx\">m</span><span class=\"p\">(</span><span class=\"nx\">o</span><span class=\"p\">);</span><span class=\"k\">return</span> <span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">int32</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(){</span><span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"o\">|</span><span class=\"nx\">u</span><span class=\"p\">.</span><span class=\"nx\">g</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)},</span><span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">quick</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(){</span><span class=\"k\">return</span> <span class=\"nx\">u</span><span class=\"p\">.</span><span class=\"nx\">g</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mi\">4294967296</span><span class=\"p\">},</span><span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"kr\">double</span><span class=\"o\">=</span><span class=\"nx\">e</span><span class=\"p\">,</span><span class=\"nx\">j</span><span class=\"p\">(</span><span class=\"nx\">S</span><span class=\"p\">(</span><span class=\"nx\">u</span><span class=\"p\">.</span><span class=\"nx\">S</span><span class=\"p\">),</span><span class=\"nx\">a</span><span class=\"p\">),(</span><span class=\"nx\">t</span><span class=\"p\">.</span><span class=\"nx\">pass</span><span class=\"o\">||</span><span class=\"nx\">r</span><span class=\"o\">||</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"p\">,</span><span class=\"nx\">t</span><span class=\"p\">,</span><span class=\"nx\">r</span><span class=\"p\">,</span><span class=\"nx\">e</span><span class=\"p\">){</span><span class=\"k\">return</span> <span class=\"nx\">e</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">S</span><span class=\"o\">&amp;&amp;</span><span class=\"nx\">v</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">,</span><span class=\"nx\">u</span><span class=\"p\">),</span><span class=\"nx\">n</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(){</span><span class=\"k\">return</span> <span class=\"nx\">v</span><span class=\"p\">(</span><span class=\"nx\">u</span><span class=\"p\">,{})}),</span><span class=\"nx\">r</span><span class=\"o\">?</span><span class=\"p\">(</span><span class=\"nx\">c</span><span class=\"p\">[</span><span class=\"nx\">p</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"nx\">n</span><span class=\"p\">,</span><span class=\"nx\">t</span><span class=\"p\">)</span><span class=\"o\">:</span><span class=\"nx\">n</span><span class=\"p\">})(</span><span class=\"nx\">e</span><span class=\"p\">,</span><span class=\"nx\">i</span><span class=\"p\">,</span><span class=\"s2\">&#34;global&#34;</span><span class=\"k\">in</span> <span class=\"nx\">t</span><span class=\"o\">?</span><span class=\"nx\">t</span><span class=\"p\">.</span><span class=\"nx\">global</span><span class=\"o\">:</span><span class=\"k\">this</span><span class=\"o\">==</span><span class=\"nx\">c</span><span class=\"p\">,</span><span class=\"nx\">t</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">)}</span><span class=\"kd\">function</span> <span class=\"nx\">m</span><span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"p\">){</span><span class=\"kd\">var</span> <span class=\"nx\">t</span><span class=\"p\">,</span><span class=\"nx\">r</span><span class=\"o\">=</span><span class=\"nx\">n</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">,</span><span class=\"nx\">u</span><span class=\"o\">=</span><span class=\"k\">this</span><span class=\"p\">,</span><span class=\"nx\">e</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"nx\">o</span><span class=\"o\">=</span><span class=\"nx\">u</span><span class=\"p\">.</span><span class=\"nx\">i</span><span class=\"o\">=</span><span class=\"nx\">u</span><span class=\"p\">.</span><span class=\"nx\">j</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"nx\">i</span><span class=\"o\">=</span><span class=\"nx\">u</span><span class=\"p\">.</span><span class=\"nx\">S</span><span class=\"o\">=</span><span class=\"p\">[];</span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"nx\">r</span><span class=\"o\">||</span><span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"nx\">r</span><span class=\"o\">++</span><span class=\"p\">]);</span><span class=\"nx\">e</span><span class=\"o\">&lt;</span><span class=\"nx\">l</span><span class=\"p\">;)</span><span class=\"nx\">i</span><span class=\"p\">[</span><span class=\"nx\">e</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"nx\">e</span><span class=\"o\">++</span><span class=\"p\">;</span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"nx\">e</span><span class=\"o\">&lt;</span><span class=\"nx\">l</span><span class=\"p\">;</span><span class=\"nx\">e</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"nx\">i</span><span class=\"p\">[</span><span class=\"nx\">e</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"nx\">i</span><span class=\"p\">[</span><span class=\"nx\">o</span><span class=\"o\">=</span><span class=\"nx\">h</span><span class=\"o\">&amp;</span><span class=\"nx\">o</span><span class=\"o\">+</span><span class=\"nx\">n</span><span class=\"p\">[</span><span class=\"nx\">e</span><span class=\"o\">%</span><span class=\"nx\">r</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"p\">(</span><span class=\"nx\">t</span><span class=\"o\">=</span><span class=\"nx\">i</span><span class=\"p\">[</span><span class=\"nx\">e</span><span class=\"p\">])],</span><span class=\"nx\">i</span><span class=\"p\">[</span><span class=\"nx\">o</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"nx\">t</span><span class=\"p\">;(</span><span class=\"nx\">u</span><span class=\"p\">.</span><span class=\"nx\">g</span><span class=\"o\">=</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"p\">){</span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">t</span><span class=\"p\">,</span><span class=\"nx\">r</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"nx\">e</span><span class=\"o\">=</span><span class=\"nx\">u</span><span class=\"p\">.</span><span class=\"nx\">i</span><span class=\"p\">,</span><span class=\"nx\">o</span><span class=\"o\">=</span><span class=\"nx\">u</span><span class=\"p\">.</span><span class=\"nx\">j</span><span class=\"p\">,</span><span class=\"nx\">i</span><span class=\"o\">=</span><span class=\"nx\">u</span><span class=\"p\">.</span><span class=\"nx\">S</span><span class=\"p\">;</span><span class=\"nx\">n</span><span class=\"o\">--</span><span class=\"p\">;)</span><span class=\"nx\">t</span><span class=\"o\">=</span><span class=\"nx\">i</span><span class=\"p\">[</span><span class=\"nx\">e</span><span class=\"o\">=</span><span class=\"nx\">h</span><span class=\"o\">&amp;</span><span class=\"nx\">e</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"nx\">r</span><span class=\"o\">=</span><span class=\"nx\">r</span><span class=\"o\">*</span><span class=\"nx\">l</span><span class=\"o\">+</span><span class=\"nx\">i</span><span class=\"p\">[</span><span class=\"nx\">h</span><span class=\"o\">&amp;</span><span class=\"p\">(</span><span class=\"nx\">i</span><span class=\"p\">[</span><span class=\"nx\">e</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"nx\">i</span><span class=\"p\">[</span><span class=\"nx\">o</span><span class=\"o\">=</span><span class=\"nx\">h</span><span class=\"o\">&amp;</span><span class=\"nx\">o</span><span class=\"o\">+</span><span class=\"nx\">t</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"p\">(</span><span class=\"nx\">i</span><span class=\"p\">[</span><span class=\"nx\">o</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"nx\">t</span><span class=\"p\">)];</span><span class=\"k\">return</span> <span class=\"nx\">u</span><span class=\"p\">.</span><span class=\"nx\">i</span><span class=\"o\">=</span><span class=\"nx\">e</span><span class=\"p\">,</span><span class=\"nx\">u</span><span class=\"p\">.</span><span class=\"nx\">j</span><span class=\"o\">=</span><span class=\"nx\">o</span><span class=\"p\">,</span><span class=\"nx\">r</span><span class=\"p\">})(</span><span class=\"nx\">l</span><span class=\"p\">)}</span><span class=\"kd\">function</span> <span class=\"nx\">v</span><span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"p\">,</span><span class=\"nx\">t</span><span class=\"p\">){</span><span class=\"k\">return</span> <span class=\"nx\">t</span><span class=\"p\">.</span><span class=\"nx\">i</span><span class=\"o\">=</span><span class=\"nx\">n</span><span class=\"p\">.</span><span class=\"nx\">i</span><span class=\"p\">,</span><span class=\"nx\">t</span><span class=\"p\">.</span><span class=\"nx\">j</span><span class=\"o\">=</span><span class=\"nx\">n</span><span class=\"p\">.</span><span class=\"nx\">j</span><span class=\"p\">,</span><span class=\"nx\">t</span><span class=\"p\">.</span><span class=\"nx\">S</span><span class=\"o\">=</span><span class=\"nx\">n</span><span class=\"p\">.</span><span class=\"nx\">S</span><span class=\"p\">.</span><span class=\"nx\">slice</span><span class=\"p\">(),</span><span class=\"nx\">t</span><span class=\"p\">}</span><span class=\"kd\">function</span> <span class=\"nx\">j</span><span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"p\">,</span><span class=\"nx\">t</span><span class=\"p\">){</span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">r</span><span class=\"p\">,</span><span class=\"nx\">e</span><span class=\"o\">=</span><span class=\"nx\">n</span><span class=\"o\">+</span><span class=\"s2\">&#34;&#34;</span><span class=\"p\">,</span><span class=\"nx\">o</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"nx\">o</span><span class=\"o\">&lt;</span><span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;)</span><span class=\"nx\">t</span><span class=\"p\">[</span><span class=\"nx\">h</span><span class=\"o\">&amp;</span><span class=\"nx\">o</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"nx\">h</span><span class=\"o\">&amp;</span><span class=\"p\">(</span><span class=\"nx\">r</span><span class=\"o\">^=</span><span class=\"mi\">19</span><span class=\"o\">*</span><span class=\"nx\">t</span><span class=\"p\">[</span><span class=\"nx\">h</span><span class=\"o\">&amp;</span><span class=\"nx\">o</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">charCodeAt</span><span class=\"p\">(</span><span class=\"nx\">o</span><span class=\"o\">++</span><span class=\"p\">);</span><span class=\"k\">return</span> <span class=\"nx\">S</span><span class=\"p\">(</span><span class=\"nx\">t</span><span class=\"p\">)}</span><span class=\"kd\">function</span> <span class=\"nx\">S</span><span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"p\">){</span><span class=\"k\">return</span> <span class=\"nb\">String</span><span class=\"p\">.</span><span class=\"nx\">fromCharCode</span><span class=\"p\">.</span><span class=\"nx\">apply</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"nx\">n</span><span class=\"p\">)}</span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">j</span><span class=\"p\">(</span><span class=\"nx\">c</span><span class=\"p\">.</span><span class=\"nx\">random</span><span class=\"p\">(),</span><span class=\"nx\">a</span><span class=\"p\">),</span><span class=\"s2\">&#34;object&#34;</span><span class=\"o\">==</span><span class=\"k\">typeof</span> <span class=\"nx\">module</span><span class=\"o\">&amp;&amp;</span><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span><span class=\"p\">){</span><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span><span class=\"o\">=</span><span class=\"nx\">n</span><span class=\"p\">;</span><span class=\"k\">try</span><span class=\"p\">{</span><span class=\"nx\">s</span><span class=\"o\">=</span><span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s2\">&#34;crypto&#34;</span><span class=\"p\">)}</span><span class=\"k\">catch</span><span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"p\">){}}</span><span class=\"k\">else</span><span class=\"s2\">&#34;function&#34;</span><span class=\"o\">==</span><span class=\"k\">typeof</span> <span class=\"nx\">define</span><span class=\"o\">&amp;&amp;</span><span class=\"nx\">define</span><span class=\"p\">.</span><span class=\"nx\">amd</span><span class=\"o\">?</span><span class=\"nx\">define</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(){</span><span class=\"k\">return</span> <span class=\"nx\">n</span><span class=\"p\">})</span><span class=\"o\">:</span><span class=\"nx\">c</span><span class=\"p\">[</span><span class=\"s2\">&#34;seed&#34;</span><span class=\"o\">+</span><span class=\"nx\">p</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"nx\">n</span><span class=\"p\">}(</span><span class=\"s2\">&#34;undefined&#34;</span><span class=\"o\">!=</span><span class=\"k\">typeof</span> <span class=\"nx\">self</span><span class=\"o\">?</span><span class=\"nx\">self</span><span class=\"o\">:</span><span class=\"k\">this</span><span class=\"p\">,[],</span><span class=\"nb\">Math</span><span class=\"p\">);</span>\n  <span class=\"c1\">// MIT License\n</span><span class=\"c1\"></span>  <span class=\"c1\">// Copyright 2019 David Bau.\n</span><span class=\"c1\"></span>  <span class=\"c1\">// Permission is hereby granted, free of charge, to any person obtaining a copy\n</span><span class=\"c1\"></span>  <span class=\"c1\">// of this software and associated documentation files (the &#34;Software&#34;), to deal\n</span><span class=\"c1\"></span>  <span class=\"c1\">// in the Software without restriction, including without limitation the rights\n</span><span class=\"c1\"></span>  <span class=\"c1\">// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n</span><span class=\"c1\"></span>  <span class=\"c1\">// copies of the Software, and to permit persons to whom the Software is\n</span><span class=\"c1\"></span>  <span class=\"c1\">// furnished to do so, subject to the following conditions:\n</span><span class=\"c1\"></span>  <span class=\"c1\">// The above copyright notice and this permission notice shall be included in all\n</span><span class=\"c1\"></span>  <span class=\"c1\">// copies or substantial portions of the Software.\n</span><span class=\"c1\"></span>  <span class=\"c1\">// THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n</span><span class=\"c1\"></span>  <span class=\"c1\">// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n</span><span class=\"c1\"></span>  <span class=\"c1\">// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n</span><span class=\"c1\"></span>  <span class=\"c1\">// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n</span><span class=\"c1\"></span>  <span class=\"c1\">// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n</span><span class=\"c1\"></span>  <span class=\"c1\">// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n</span><span class=\"c1\"></span>  <span class=\"c1\">// SOFTWARE.\n</span><span class=\"c1\"></span>  <span class=\"kd\">let</span> <span class=\"nx\">seed</span> <span class=\"o\">=</span> <span class=\"nx\">get_seed</span><span class=\"p\">();</span>\n  <span class=\"kr\">const</span> <span class=\"nx\">generator</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">seedrandom</span><span class=\"p\">(</span><span class=\"nx\">seed</span><span class=\"p\">);</span>\n  <span class=\"kr\">const</span> <span class=\"nx\">fuzz_factor</span> <span class=\"o\">=</span> <span class=\"nx\">generator</span><span class=\"p\">();</span>\n  <span class=\"nx\">seed</span> <span class=\"o\">=</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">round</span><span class=\"p\">(</span><span class=\"nx\">fuzz_factor</span> <span class=\"o\">*</span> <span class=\"mi\">10000</span><span class=\"p\">);</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">again</span><span class=\"p\">.</span><span class=\"nx\">seed</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">seed</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"mi\">10000</span><span class=\"p\">;</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">hard</span><span class=\"p\">.</span><span class=\"nx\">seed</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">seed</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"mi\">10000</span><span class=\"p\">;</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">good</span><span class=\"p\">.</span><span class=\"nx\">seed</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">seed</span> <span class=\"o\">+</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"mi\">10000</span><span class=\"p\">;</span>\n  <span class=\"nx\">customData</span><span class=\"p\">.</span><span class=\"nx\">easy</span><span class=\"p\">.</span><span class=\"nx\">seed</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">seed</span> <span class=\"o\">+</span> <span class=\"mi\">4</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"mi\">10000</span><span class=\"p\">;</span>\n  <span class=\"k\">return</span> <span class=\"nx\">fuzz_factor</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div><blockquote data-pid=\"Ed-VC13H\">最新稳定版本的代码请见：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/open-spaced-repetition/fsrs4anki/releases/latest\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Releases · open-spaced-repetition/fsrs4anki (github.com)</a></blockquote><p data-pid=\"58NpUbTN\">理论上你已经开始使用 FSRS4Anki 算法了。如果你不确定，可以将代码中的</p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"kr\">const</span> <span class=\"nx\">display_memory_state</span> <span class=\"o\">=</span> <span class=\"kc\">false</span><span class=\"p\">;</span>\n</code></pre></div><p data-pid=\"9oKhZCTA\">改为</p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"kr\">const</span> <span class=\"nx\">display_memory_state</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><span class=\"p\">;</span>\n</code></pre></div><p data-pid=\"wn8C0xwM\">然后随便打开一个牌组复习，你将看到：</p><figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-0b84dfc2066520eac05cc1809e6f4b75_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"667\" data-rawheight=\"598\" class=\"origin_image zh-lightbox-thumb\" width=\"667\" data-original=\"https://pic4.zhimg.com/v2-0b84dfc2066520eac05cc1809e6f4b75_r.jpg\" data-original-token=\"v2-0b84dfc2066520eac05cc1809e6f4b75\"/></figure><p data-pid=\"DtBzPjvO\">这表示你的 FSRS 已经正常运行了。然后你可以再把代码改回去，就不会显示这个信息了。</p><h2>2 进阶使用</h2><h3>2.1 生成个性化参数</h3><a href=\"https://link.zhihu.com/?target=https%3A//github.com/open-spaced-repetition/fsrs4anki/blob/main/fsrs4anki_optimizer.ipynb\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pica.zhimg.com/v2-040f8f3f57d5cb781faeec3ad2af9ad2_qhd.jpg\" data-image-width=\"1200\" data-image-height=\"600\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">fsrs4anki/fsrs4anki_optimizer.ipynb at main · open-spaced-repetition/fsrs4anki</a><p data-pid=\"yoasI4cp\">打开 optimizer 的 notebook，点击 Open in Colab，即可在 Google Colab 上运行优化器，不需要自己配置代码运行环境，还可以白嫖 Google 的机器（需要注册 Google 账号）：</p><figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-51b327eb51a7664947981b1e2f7b625d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1616\" data-rawheight=\"734\" class=\"origin_image zh-lightbox-thumb\" width=\"1616\" data-original=\"https://pic2.zhimg.com/v2-51b327eb51a7664947981b1e2f7b625d_r.jpg\" data-original-token=\"v2-51b327eb51a7664947981b1e2f7b625d\"/></figure><p data-pid=\"U0ka43nT\">在 Colab 上打开后，切到文件夹标签页，然后等 Optimizer 连上 Google 的机器，就可以右键上传你的牌组文件/集合文件了。请在导出这些文件时，勾选「包含学习进度信息」以及「支持较旧的Anki版本」。</p><figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-c0d71b46b1429929c8176c4bed80b66a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1400\" data-rawheight=\"1074\" class=\"origin_image zh-lightbox-thumb\" width=\"1400\" data-original=\"https://pic1.zhimg.com/v2-c0d71b46b1429929c8176c4bed80b66a_r.jpg\" data-original-token=\"v2-c0d71b46b1429929c8176c4bed80b66a\"/></figure><figure data-size=\"normal\"><img src=\"https://pica.zhimg.com/v2-f6beee55d26bc4447ae7ea7a67a071b6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1298\" data-rawheight=\"440\" class=\"origin_image zh-lightbox-thumb\" width=\"1298\" data-original=\"https://pica.zhimg.com/v2-f6beee55d26bc4447ae7ea7a67a071b6_r.jpg\" data-original-token=\"v2-f6beee55d26bc4447ae7ea7a67a071b6\"/></figure><p data-pid=\"C8gCmkay\">传完后，把 notebook 里的 filename 改成你上传的文件名称。</p><figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-d606ba6bf7ae0c44c13b48d7c28ec048_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2098\" data-rawheight=\"1180\" class=\"origin_image zh-lightbox-thumb\" width=\"2098\" data-original=\"https://pic3.zhimg.com/v2-d606ba6bf7ae0c44c13b48d7c28ec048_r.jpg\" data-original-token=\"v2-d606ba6bf7ae0c44c13b48d7c28ec048\"/></figure><p data-pid=\"XCKBM_g3\">然后点击「全部运行」</p><figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-c28ee6a502c71cf49f46291cdd2e5ac1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1192\" data-rawheight=\"510\" class=\"origin_image zh-lightbox-thumb\" width=\"1192\" data-original=\"https://pic4.zhimg.com/v2-c28ee6a502c71cf49f46291cdd2e5ac1_r.jpg\" data-original-token=\"v2-c28ee6a502c71cf49f46291cdd2e5ac1\"/></figure><p data-pid=\"jKViw88N\">然后到 2.3 节等到代码跑完，复制输出的个性化参数。</p><figure data-size=\"normal\"><img src=\"https://pica.zhimg.com/v2-401ac9df90c09eb859221f90f79e18c8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1994\" data-rawheight=\"818\" class=\"origin_image zh-lightbox-thumb\" width=\"1994\" data-original=\"https://pica.zhimg.com/v2-401ac9df90c09eb859221f90f79e18c8_r.jpg\" data-original-token=\"v2-401ac9df90c09eb859221f90f79e18c8\"/></figure><p data-pid=\"NehtqDVs\">替换前面你复制的 FSRS 代码中的参数。</p><figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-59158f2b7a9c23c0a7ae1561bb214ca6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1620\" data-rawheight=\"976\" class=\"origin_image zh-lightbox-thumb\" width=\"1620\" data-original=\"https://pic1.zhimg.com/v2-59158f2b7a9c23c0a7ae1561bb214ca6_r.jpg\" data-original-token=\"v2-59158f2b7a9c23c0a7ae1561bb214ca6\"/></figure><p data-pid=\"kCr8T-i-\">⚠️注意：替换这个参数的时候，请不要把结尾的逗号给删掉了。</p><h3>2.2 牌组参数设置</h3><p data-pid=\"QEz6t5fN\">你也可以为不同牌组生成不同的参数，并在代码中分别配置。在默认配置中，deckParams 已经包含了三组参数。</p><p data-pid=\"uH2j9gXq\">global config for FSRS4Anki 这组是全局参数。</p><p data-pid=\"0uInIflB\">ALL::Learning::English::Reading 这组是应用于 <code>ALL::Learning::English::Reading</code> 这个牌组及其子牌组的参数。</p><p data-pid=\"y-yUu4N1\"> 同理，第三组就是应用于 <code>ALL::Archive</code> 这个牌组及其子牌组的参数。大家可以替换成自己要配置的牌组。如果不够用，请自行复制添加。 </p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"kr\">const</span> <span class=\"nx\">deckParams</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n  <span class=\"p\">{</span>\n    <span class=\"c1\">// Default parameters of FSRS4Anki for global\n</span><span class=\"c1\"></span>    <span class=\"s2\">&#34;deckName&#34;</span><span class=\"o\">:</span> <span class=\"s2\">&#34;global config for FSRS4Anki&#34;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&#34;w&#34;</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"mf\">1.4</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.12</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n    <span class=\"c1\">// The above parameters can be optimized via FSRS4Anki optimizer.\n</span><span class=\"c1\"></span>    <span class=\"c1\">// For details about the parameters, please see: https://github.com/open-spaced-repetition/fsrs4anki/wiki/Free-Spaced-Repetition-Scheduler\n</span><span class=\"c1\"></span>    <span class=\"c1\">// User&#39;s custom parameters for global\n</span><span class=\"c1\"></span>    <span class=\"s2\">&#34;requestRetention&#34;</span><span class=\"o\">:</span> <span class=\"mf\">0.9</span><span class=\"p\">,</span> <span class=\"c1\">// recommended setting: 0.8 ~ 0.9\n</span><span class=\"c1\"></span>    <span class=\"s2\">&#34;maximumInterval&#34;</span><span class=\"o\">:</span> <span class=\"mi\">36500</span><span class=\"p\">,</span>\n    <span class=\"s2\">&#34;easyBonus&#34;</span><span class=\"o\">:</span> <span class=\"mf\">1.3</span><span class=\"p\">,</span>\n    <span class=\"s2\">&#34;hardInterval&#34;</span><span class=\"o\">:</span> <span class=\"mf\">1.2</span><span class=\"p\">,</span>\n    <span class=\"c1\">// FSRS only modifies the long-term scheduling. So (re)learning steps in deck options work as usual.\n</span><span class=\"c1\"></span>    <span class=\"c1\">// I recommend setting steps shorter than 1 day.\n</span><span class=\"c1\"></span>  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"c1\">// Example 1: User&#39;s custom parameters for this deck and its sub-decks.\n</span><span class=\"c1\"></span>    <span class=\"c1\">// Need to add &lt;div id=deck deck_name=&#34;{{Deck}}&#34;&gt;&lt;/div&gt; to your card&#39;s front template&#39;s first line.\n</span><span class=\"c1\"></span>    <span class=\"s2\">&#34;deckName&#34;</span><span class=\"o\">:</span> <span class=\"s2\">&#34;ALL::Learning::English::Reading&#34;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&#34;w&#34;</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"mf\">1.1475</span><span class=\"p\">,</span> <span class=\"mf\">1.401</span><span class=\"p\">,</span> <span class=\"mf\">5.1483</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">1.4221</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">1.2282</span><span class=\"p\">,</span> <span class=\"mf\">0.035</span><span class=\"p\">,</span> <span class=\"mf\">1.4668</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.1286</span><span class=\"p\">,</span> <span class=\"mf\">0.7539</span><span class=\"p\">,</span> <span class=\"mf\">1.9671</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.2307</span><span class=\"p\">,</span> <span class=\"mf\">0.32</span><span class=\"p\">,</span> <span class=\"mf\">0.9451</span><span class=\"p\">],</span>\n    <span class=\"s2\">&#34;requestRetention&#34;</span><span class=\"o\">:</span> <span class=\"mf\">0.9</span><span class=\"p\">,</span>\n    <span class=\"s2\">&#34;maximumInterval&#34;</span><span class=\"o\">:</span> <span class=\"mi\">36500</span><span class=\"p\">,</span>\n    <span class=\"s2\">&#34;easyBonus&#34;</span><span class=\"o\">:</span> <span class=\"mf\">1.3</span><span class=\"p\">,</span>\n    <span class=\"s2\">&#34;hardInterval&#34;</span><span class=\"o\">:</span> <span class=\"mf\">1.2</span><span class=\"p\">,</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"c1\">// Example 2: User&#39;s custom parameters for this deck and its sub-decks.\n</span><span class=\"c1\"></span>    <span class=\"c1\">// Don&#39;t omit any keys.\n</span><span class=\"c1\"></span>    <span class=\"s2\">&#34;deckName&#34;</span><span class=\"o\">:</span> <span class=\"s2\">&#34;ALL::Archive&#34;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&#34;w&#34;</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"mf\">1.2879</span><span class=\"p\">,</span> <span class=\"mf\">0.5135</span><span class=\"p\">,</span> <span class=\"mf\">4.9532</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">1.502</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">1.0922</span><span class=\"p\">,</span> <span class=\"mf\">0.0081</span><span class=\"p\">,</span> <span class=\"mf\">1.3771</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.0294</span><span class=\"p\">,</span> <span class=\"mf\">0.6718</span><span class=\"p\">,</span> <span class=\"mf\">1.8335</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.4066</span><span class=\"p\">,</span> <span class=\"mf\">0.7291</span><span class=\"p\">,</span> <span class=\"mf\">0.5517</span><span class=\"p\">],</span>\n    <span class=\"s2\">&#34;requestRetention&#34;</span><span class=\"o\">:</span> <span class=\"mf\">0.9</span><span class=\"p\">,</span>\n    <span class=\"s2\">&#34;maximumInterval&#34;</span><span class=\"o\">:</span> <span class=\"mi\">36500</span><span class=\"p\">,</span>\n    <span class=\"s2\">&#34;easyBonus&#34;</span><span class=\"o\">:</span> <span class=\"mf\">1.3</span><span class=\"p\">,</span>\n    <span class=\"s2\">&#34;hardInterval&#34;</span><span class=\"o\">:</span> <span class=\"mf\">1.2</span><span class=\"p\">,</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">];</span>\n</code></pre></div><p data-pid=\"Zvlrfs0d\">如果你有些牌组不想使用 FSRS，可以把这些牌组的名称填入 skip_decks 的列表中。</p><div class=\"highlight\"><pre><code class=\"language-js\"><span class=\"kr\">const</span> <span class=\"nx\">skip_decks</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&#34;ALL::Learning::ML::NNDL&#34;</span><span class=\"p\">,</span> <span class=\"s2\">&#34;ALL::Learning::English&#34;</span><span class=\"p\">];</span>\n</code></pre></div><h2>3 使用助手插件</h2><p data-pid=\"41IHtka_\">Helper 插件纯属锦上添花，不建议过多使用。安装地址：</p><a href=\"https://link.zhihu.com/?target=https%3A//ankiweb.net/shared/info/759844606\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">FSRS4Anki Helper - AnkiWeb</a><h3>3.1 重新调度</h3><p data-pid=\"Z-SCCUuF\">重新调度所有卡片，可以基于前面我们填入的个性化参数，根据每张卡片的复习历史，重新预测记忆状态，并安排间隔。</p><p data-pid=\"vjwFJCNM\">注意：对于已经使用 Anki 默认算法复习过多次的卡片，重新调度可能会给出与 Scheduler 不同的间隔，因为 Scheduler 在运行时无法获得完整的复习历史。此时重新调度给出的间隔会更加准确。但之后两者就没有区别了。</p><figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-ca1de143fd11e4fafcd517d29b433991_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1240\" data-rawheight=\"912\" class=\"origin_image zh-lightbox-thumb\" width=\"1240\" data-original=\"https://pic2.zhimg.com/v2-ca1de143fd11e4fafcd517d29b433991_r.jpg\" data-original-token=\"v2-ca1de143fd11e4fafcd517d29b433991\"/></figure><h3>3.2 压力平衡</h3><p data-pid=\"VsWDZnke\">开启压力平衡选项后，重新规划时会让每天的复习量尽可能一致、平滑。</p><figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-f4b0644f72dad3f50c38966a925be532_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1240\" data-rawheight=\"912\" class=\"origin_image zh-lightbox-thumb\" width=\"1240\" data-original=\"https://pic3.zhimg.com/v2-f4b0644f72dad3f50c38966a925be532_r.jpg\" data-original-token=\"v2-f4b0644f72dad3f50c38966a925be532\"/></figure><p data-pid=\"CN3n2Rob\">下面是对比，第一张是开之前进行重新调度，第二张是开之后进行重新调度：</p><figure data-size=\"normal\"><img src=\"https://pica.zhimg.com/v2-ecc44145f32f8fc144a287cfe455aee0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1500\" data-rawheight=\"1300\" class=\"origin_image zh-lightbox-thumb\" width=\"1500\" data-original=\"https://pica.zhimg.com/v2-ecc44145f32f8fc144a287cfe455aee0_r.jpg\" data-original-token=\"v2-ecc44145f32f8fc144a287cfe455aee0\"/></figure><figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-7f584c1292ed677639f0e919957534af_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1500\" data-rawheight=\"1300\" class=\"origin_image zh-lightbox-thumb\" width=\"1500\" data-original=\"https://pic2.zhimg.com/v2-7f584c1292ed677639f0e919957534af_r.jpg\" data-original-token=\"v2-7f584c1292ed677639f0e919957534af\"/></figure><h3>3.3 周末放假</h3><p data-pid=\"5qg2H9au\">实际上可以选择在周一到周天任何几天进行放假。开启后，进行重新调度时，Helper 将尽可能避开你设定的日期安排复习。</p><figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-26d0ab4c33021e9bea30374094c893be_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1432\" data-rawheight=\"912\" class=\"origin_image zh-lightbox-thumb\" width=\"1432\" data-original=\"https://pic1.zhimg.com/v2-26d0ab4c33021e9bea30374094c893be_r.jpg\" data-original-token=\"v2-26d0ab4c33021e9bea30374094c893be\"/></figure><p data-pid=\"mur8WZuO\">效果：</p><figure data-size=\"normal\"><img src=\"https://picx.zhimg.com/v2-54fbb34bf8abc478d7db58490fb1fe59_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1500\" data-rawheight=\"1300\" class=\"origin_image zh-lightbox-thumb\" width=\"1500\" data-original=\"https://picx.zhimg.com/v2-54fbb34bf8abc478d7db58490fb1fe59_r.jpg\" data-original-token=\"v2-54fbb34bf8abc478d7db58490fb1fe59\"/></figure><h3>3.4 提前/推迟</h3><p data-pid=\"mJDOvGZd\">这两个功能很相似，放一起说。你可以设置提前/推迟的卡片数量，Helper 插件将按照相对提前/推迟顺序排序，然后进行提前/推迟，确保在满足你设置的卡片数量的同时，最小化对原有复习安排的偏离。</p><figure data-size=\"normal\"><img src=\"https://pica.zhimg.com/v2-707d07977a3d88e06f5544a6a40b44f6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1240\" data-rawheight=\"912\" class=\"origin_image zh-lightbox-thumb\" width=\"1240\" data-original=\"https://pica.zhimg.com/v2-707d07977a3d88e06f5544a6a40b44f6_r.jpg\" data-original-token=\"v2-707d07977a3d88e06f5544a6a40b44f6\"/></figure><figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-02732f2010394a33ece76a055f9b3b21_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1264\" data-rawheight=\"354\" class=\"origin_image zh-lightbox-thumb\" width=\"1264\" data-original=\"https://pic2.zhimg.com/v2-02732f2010394a33ece76a055f9b3b21_r.jpg\" data-original-token=\"v2-02732f2010394a33ece76a055f9b3b21\"/></figure><h3>3.5 分散关联卡片</h3><p data-pid=\"6uqk7_qs\">在 Anki 中，有些模板会从同一条笔记中生成多张在内容上有关联的卡片，比如翻转卡片（中-&gt;英，英-&gt;中）和填空卡（当你在同一条笔记上挖了好多个空时）。这些卡片的复习日期如果隔得太近，可能会相互干扰或提醒，关联卡片分散可以让这些卡片的复习日期尽可能错开。</p><figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-aa5adaca683e7ec7ba67dccac91ecad9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1240\" data-rawheight=\"912\" class=\"origin_image zh-lightbox-thumb\" width=\"1240\" data-original=\"https://pic2.zhimg.com/v2-aa5adaca683e7ec7ba67dccac91ecad9_r.jpg\" data-original-token=\"v2-aa5adaca683e7ec7ba67dccac91ecad9\"/></figure><h3>3.6 高级搜索</h3><p data-pid=\"EEOLBdNo\">在卡片浏览器中，你可以右键<b>表头</b>，点击 Difficulty、Stability、Retention，让卡片浏览器显示卡片当前的记忆状态。</p><figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-b2b40c84f58f47fbb789c70635732d0f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1658\" data-rawheight=\"1040\" class=\"origin_image zh-lightbox-thumb\" width=\"1658\" data-original=\"https://pic4.zhimg.com/v2-b2b40c84f58f47fbb789c70635732d0f_r.jpg\" data-original-token=\"v2-b2b40c84f58f47fbb789c70635732d0f\"/></figure><p data-pid=\"znJpI88g\">同时支持三种属性的筛选语法，以下是一些例子：</p><ul><li data-pid=\"ztDNLe_U\">s&lt;10：记忆稳定性小于 10 天的卡片</li><li data-pid=\"L4XvsP_r\">d=5：难度等于 5 的卡片</li><li data-pid=\"yR5vDoiq\">r&lt;0.6：记忆可提取性（回忆概率）小于 60% 的卡片</li></ul><h3>3.7 高级统计</h3><p data-pid=\"sFmOfz0M\">按住 Shift 键，同时点击「统计」，即可进入旧版的 Anki 统计界面。</p><figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-104195778e6f53473d487dbe9dbfc28f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1500\" data-rawheight=\"1300\" class=\"origin_image zh-lightbox-thumb\" width=\"1500\" data-original=\"https://pic2.zhimg.com/v2-104195778e6f53473d487dbe9dbfc28f_r.jpg\" data-original-token=\"v2-104195778e6f53473d487dbe9dbfc28f\"/></figure><p data-pid=\"DgyNtDhf\">Average retention，即平均保留率，反映了你目前所有复习过的卡片还记得的百分比。</p><p data-pid=\"34wdUk0u\">Average stability，即平均记忆稳定性，反映了你目前所有复习过的卡片的遗忘速率。稳定性越大，遗忘速率越慢。</p><hr/><p data-pid=\"tUBcDEPv\">以上就是 FSRS4Anki 的完整食用指南了，希望对你有所帮助。如果我的工作对你的学习有益，还恳请给我的开源项目 star，给插件页面点赞。</p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/open-spaced-repetition/fsrs4anki\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pica.zhimg.com/v2-040f8f3f57d5cb781faeec3ad2af9ad2_qhd.jpg\" data-image-width=\"1200\" data-image-height=\"600\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">GitHub - open-spaced-repetition/fsrs4anki: A modern Anki custom scheduling based on free spaced repetition scheduler algorithm</a><a href=\"https://link.zhihu.com/?target=https%3A//ankiweb.net/shared/info/759844606\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">FSRS4Anki Helper - AnkiWeb</a><p></p>",
  "column": {
    "updated": 1599152271,
    "description": "围绕「Anki」和高考备考，面向广大高中生，交流作者们对「Anki」和高考的认识与见解，分享同学们整理的高中知识牌组，带每个考生高效学习！",
    "author": {
      "is_followed": false,
      "badge": [],
      "name": "Thoughts Memo",
      "url": "https://api.zhihu.com/people/4c592f496dc33822b560b382907ff1d0",
      "gender": 1,
      "user_type": "people",
      "headline": "学校≠教育≠技能；文凭溢价=80%信号传递+20%人力资本",
      "avatar_url": "https://picx.zhimg.com/50/v2-41f893b0cd84fb6a8c8f6d1bd29c9554_l.jpg?source=b1748391",
      "is_following": false,
      "type": "people",
      "id": "4c592f496dc33822b560b382907ff1d0"
    },
    "url": "https://api.zhihu.com/columns/ankigaokao",
    "title": "AnkiX高考",
    "image_url": "https://picx.zhimg.com/v2-915dfc2907d61311962269fc24181b74_720w.jpg?source=d16d100b",
    "type": "column",
    "id": "ankigaokao"
  },
  "comment_count": 502,
  "image_url": "https://pic1.zhimg.com/v2-45bb03201deafd09042d18f802df727a_720w.jpg?source=b1748391",
  "linkbox": {
    "url": "",
    "category": "",
    "pic": "",
    "title": ""
  },
  "voting": 0,
  "type": "article",
  "suggest_edit": {
    "status": false,
    "url": "",
    "reason": "",
    "tip": "",
    "title": ""
  },
  "is_normal": true,
  "censored": false
}