{
  "answer_type": "normal",
  "author": {
    "avatar_url": "https://pica.zhimg.com/v2-f958f2b875b0cf4d7ee853e4446ba2d1_l.jpg?source=2c26e567",
    "avatar_url_template": "https://picx.zhimg.com/v2-f958f2b875b0cf4d7ee853e4446ba2d1.jpg?source=2c26e567",
    "badge": [
      {
        "description": "信息技术行业 算法工程师",
        "topics": [],
        "type": "identity"
      }
    ],
    "badge_v2": {
      "detail_badges": [
        {
          "description": "知势榜教育校园领域影响力榜答主",
          "detail_type": "super_activity",
          "icon": "https://pic1.zhimg.com/v2-4a07bc69c4bb04444721f35b32125c75_l.png?source=32738c0c",
          "night_icon": "https://picx.zhimg.com/v2-4a07bc69c4bb04444721f35b32125c75_l.png?source=32738c0c",
          "sources": [
            {
              "avatar_path": "",
              "avatar_url": "",
              "description": "",
              "id": "27",
              "name": "知势榜8月",
              "priority": 27,
              "token": "",
              "type": "content_potential_category",
              "url": ""
            }
          ],
          "title": "社区成就",
          "type": "reward",
          "url": ""
        },
        {
          "description": "信息技术行业 算法工程师",
          "detail_type": "identity_people",
          "icon": "https://pica.zhimg.com/v2-2ddc5cc683982648f6f123616fb4ec09_l.png?source=32738c0c",
          "night_icon": "https://picx.zhimg.com/v2-2ddc5cc683982648f6f123616fb4ec09_l.png?source=32738c0c",
          "sources": [],
          "title": "已认证的个人",
          "type": "identity",
          "url": "https://zhuanlan.zhihu.com/p/96956163"
        }
      ],
      "icon": "https://picx.zhimg.com/v2-27bfcba90e66db79ce8768ab807e017e_l.png?source=32738c0c",
      "merged_badges": [
        {
          "description": "知势榜教育校园领域影响力榜答主",
          "detail_type": "best",
          "icon": "",
          "night_icon": "",
          "sources": [],
          "title": "社区成就",
          "type": "best",
          "url": ""
        },
        {
          "description": "信息技术行业 算法工程师",
          "detail_type": "identity",
          "icon": "",
          "night_icon": "",
          "sources": [],
          "title": "认证",
          "type": "identity",
          "url": "https://zhuanlan.zhihu.com/p/96956163"
        }
      ],
      "night_icon": "https://picx.zhimg.com/v2-27bfcba90e66db79ce8768ab807e017e_l.png?source=32738c0c",
      "title": "知势榜教育校园领域影响力榜答主"
    },
    "gender": 1,
    "headline": "学校≠教育≠技能；文凭溢价=80%信号传递+20%人力资本",
    "id": "4c592f496dc33822b560b382907ff1d0",
    "is_advertiser": false,
    "is_org": false,
    "is_privacy": false,
    "name": "Thoughts Memo",
    "type": "people",
    "url": "https://api.zhihu.com/people/4c592f496dc33822b560b382907ff1d0",
    "url_token": "L.M.Sherlock",
    "user_type": "people"
  },
  "biz_ext": {},
  "comment_count": 21,
  "content": "<p data-pid=\"hnIBpPBv\">Anki（一款开源的间隔重复软件）大概算半个吧：</p><figure data-size=\"normal\"><noscript><img src=\"https://picx.zhimg.com/50/v2-d13632ee8b2382afeaeff61ea471a691_720w.jpg?source=2c26e567\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"880\" data-rawheight=\"499\" data-original-token=\"v2-d13632ee8b2382afeaeff61ea471a691\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-48dd2b4504013f93fd5f6395a26386ce_720w.jpg?source=2c26e567\" class=\"origin_image zh-lightbox-thumb\" width=\"880\" data-original=\"https://pic1.zhimg.com/v2-d13632ee8b2382afeaeff61ea471a691_r.jpg?source=2c26e567\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;880&#39; height=&#39;499&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"880\" data-rawheight=\"499\" data-original-token=\"v2-d13632ee8b2382afeaeff61ea471a691\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-48dd2b4504013f93fd5f6395a26386ce_720w.jpg?source=2c26e567\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"880\" data-original=\"https://pic1.zhimg.com/v2-d13632ee8b2382afeaeff61ea471a691_r.jpg?source=2c26e567\" data-actualsrc=\"https://picx.zhimg.com/50/v2-d13632ee8b2382afeaeff61ea471a691_720w.jpg?source=2c26e567\"/></figure><p data-pid=\"7iiBhNet\">语言成分极其复杂（Rust 和 Python 加起来占了四分之三以上）：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-72700e657aab48dba58d6c7d159b16a5_720w.jpg?source=2c26e567\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"337\" data-rawheight=\"377\" data-original-token=\"v2-72700e657aab48dba58d6c7d159b16a5\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-5875e1afa43daf199c497988719b649f_720w.jpg?source=2c26e567\" class=\"content_image\" width=\"337\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;337&#39; height=&#39;377&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"337\" data-rawheight=\"377\" data-original-token=\"v2-72700e657aab48dba58d6c7d159b16a5\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-5875e1afa43daf199c497988719b649f_720w.jpg?source=2c26e567\" class=\"content_image lazy\" width=\"337\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-72700e657aab48dba58d6c7d159b16a5_720w.jpg?source=2c26e567\"/></figure><p data-pid=\"1mkRwrya\">以前的主体是 PyQt，现在已经将大部分底层代码用 Rust 重写了。</p><p data-pid=\"hw0FOYp3\">拜它所赐，我本来一个臭写 Python 的，现在天天被 Rust 精神注入。</p><p data-pid=\"FeLBBU29\">不过还好有 GPT-4，可以帮我写 Rust 代码，而且效果还不错：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-fd2a09f165e1592f0706e9f41e4792c2_720w.jpg?source=2c26e567\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"922\" data-rawheight=\"613\" data-original-token=\"v2-fd2a09f165e1592f0706e9f41e4792c2\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-68976a0438f157750911c44d08518c42_720w.jpg?source=2c26e567\" class=\"origin_image zh-lightbox-thumb\" width=\"922\" data-original=\"https://picx.zhimg.com/v2-fd2a09f165e1592f0706e9f41e4792c2_r.jpg?source=2c26e567\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;922&#39; height=&#39;613&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"922\" data-rawheight=\"613\" data-original-token=\"v2-fd2a09f165e1592f0706e9f41e4792c2\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-68976a0438f157750911c44d08518c42_720w.jpg?source=2c26e567\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"922\" data-original=\"https://picx.zhimg.com/v2-fd2a09f165e1592f0706e9f41e4792c2_r.jpg?source=2c26e567\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-fd2a09f165e1592f0706e9f41e4792c2_720w.jpg?source=2c26e567\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e1c6d8710415475bf8678c8227138798_720w.jpg?source=2c26e567\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"751\" data-rawheight=\"539\" data-original-token=\"v2-e1c6d8710415475bf8678c8227138798\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-10893eb2cf3047432cedeac976d424e0_720w.jpg?source=2c26e567\" class=\"origin_image zh-lightbox-thumb\" width=\"751\" data-original=\"https://pic1.zhimg.com/v2-e1c6d8710415475bf8678c8227138798_r.jpg?source=2c26e567\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;751&#39; height=&#39;539&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"751\" data-rawheight=\"539\" data-original-token=\"v2-e1c6d8710415475bf8678c8227138798\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-10893eb2cf3047432cedeac976d424e0_720w.jpg?source=2c26e567\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"751\" data-original=\"https://pic1.zhimg.com/v2-e1c6d8710415475bf8678c8227138798_r.jpg?source=2c26e567\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e1c6d8710415475bf8678c8227138798_720w.jpg?source=2c26e567\"/></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-c237965a0b95a0c3474d268e6d24809b_720w.jpg?source=2c26e567\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"751\" data-rawheight=\"498\" data-original-token=\"v2-c237965a0b95a0c3474d268e6d24809b\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-d06455b42fcfc149a2a3de54ffdd3fc0_720w.jpg?source=2c26e567\" class=\"origin_image zh-lightbox-thumb\" width=\"751\" data-original=\"https://pica.zhimg.com/v2-c237965a0b95a0c3474d268e6d24809b_r.jpg?source=2c26e567\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;751&#39; height=&#39;498&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"751\" data-rawheight=\"498\" data-original-token=\"v2-c237965a0b95a0c3474d268e6d24809b\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-d06455b42fcfc149a2a3de54ffdd3fc0_720w.jpg?source=2c26e567\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"751\" data-original=\"https://pica.zhimg.com/v2-c237965a0b95a0c3474d268e6d24809b_r.jpg?source=2c26e567\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-c237965a0b95a0c3474d268e6d24809b_720w.jpg?source=2c26e567\"/></figure><p data-pid=\"NxQWs3Dy\">一个晚上就写完了从 Anki 的 sqlite 数据库构建 FSRS 数据集的代码：</p><figure data-size=\"normal\"><noscript><img src=\"https://picx.zhimg.com/50/v2-f58256354e174c24245a859d4dfdcbc0_720w.jpg?source=2c26e567\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1301\" data-rawheight=\"404\" data-original-token=\"v2-f58256354e174c24245a859d4dfdcbc0\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-05685a65cac0f999bd4be68f918b4c57_720w.jpg?source=2c26e567\" class=\"origin_image zh-lightbox-thumb\" width=\"1301\" data-original=\"https://pic1.zhimg.com/v2-f58256354e174c24245a859d4dfdcbc0_r.jpg?source=2c26e567\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1301&#39; height=&#39;404&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1301\" data-rawheight=\"404\" data-original-token=\"v2-f58256354e174c24245a859d4dfdcbc0\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-05685a65cac0f999bd4be68f918b4c57_720w.jpg?source=2c26e567\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1301\" data-original=\"https://pic1.zhimg.com/v2-f58256354e174c24245a859d4dfdcbc0_r.jpg?source=2c26e567\" data-actualsrc=\"https://picx.zhimg.com/50/v2-f58256354e174c24245a859d4dfdcbc0_720w.jpg?source=2c26e567\"/></figure><div class=\"highlight\"><pre><code class=\"language-rust\"><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">chrono</span>::<span class=\"n\">prelude</span>::<span class=\"o\">*</span><span class=\"p\">;</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">chrono_tz</span>::<span class=\"n\">Tz</span><span class=\"p\">;</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">rusqlite</span>::<span class=\"p\">{</span><span class=\"n\">Connection</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Row</span><span class=\"p\">};</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">collections</span>::<span class=\"n\">HashMap</span><span class=\"p\">;</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"k\">crate</span>::<span class=\"n\">dataset</span>::<span class=\"n\">FSRSItem</span><span class=\"p\">;</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"cp\">#[derive(Debug)]</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"k\">struct</span> <span class=\"nc\">RevlogEntry</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">id</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">cid</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">usn</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">button_chosen</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">interval</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">last_interval</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">ease_factor</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">taken_millis</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">review_kind</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">delta_t</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">i</span>: <span class=\"kt\">usize</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">r_history</span>: <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"kt\">i32</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">t_history</span>: <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"kt\">i32</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"k\">fn</span> <span class=\"nf\">row_to_revlog_entry</span><span class=\"p\">(</span><span class=\"n\">row</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">Row</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">RevlogEntry</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">RevlogEntry</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"n\">id</span>: <span class=\"nc\">row</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"n\">cid</span>: <span class=\"nc\">row</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"n\">usn</span>: <span class=\"nc\">row</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"n\">button_chosen</span>: <span class=\"nc\">row</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"n\">interval</span>: <span class=\"nc\">row</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"n\">last_interval</span>: <span class=\"nc\">row</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"n\">ease_factor</span>: <span class=\"nc\">row</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"n\">taken_millis</span>: <span class=\"nc\">row</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">).</span><span class=\"n\">unwrap_or_default</span><span class=\"p\">(),</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"n\">review_kind</span>: <span class=\"nc\">row</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">).</span><span class=\"n\">unwrap_or_default</span><span class=\"p\">(),</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"n\">delta_t</span>: <span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"n\">i</span>: <span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"n\">r_history</span>: <span class=\"nc\">vec</span><span class=\"o\">!</span><span class=\"p\">[],</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"n\">t_history</span>: <span class=\"nc\">vec</span><span class=\"o\">!</span><span class=\"p\">[],</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"p\">})</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"k\">fn</span> <span class=\"nf\">read_collection</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">RevlogEntry</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">db</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Connection</span>::<span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s\">&#34;tests/data/collection.anki21&#34;</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">filter_out_suspended_cards</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">;</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">filter_out_flags</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vec</span><span class=\"o\">!</span><span class=\"p\">[];</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">flags_str</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"n\">filter_out_flags</span><span class=\"p\">.</span><span class=\"n\">is_empty</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"n\">format</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"w\">\n</span><span class=\"w\">            </span><span class=\"s\">&#34;AND flags NOT IN ({})&#34;</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">            </span><span class=\"n\">filter_out_flags</span><span class=\"w\">\n</span><span class=\"w\">                </span><span class=\"p\">.</span><span class=\"n\">iter</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"w\">                </span><span class=\"p\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">x</span>: <span class=\"kp\">&amp;</span><span class=\"kt\">i32</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">())</span><span class=\"w\">\n</span><span class=\"w\">                </span><span class=\"p\">.</span><span class=\"n\">collect</span>::<span class=\"o\">&lt;</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"nb\">String</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"w\">                </span><span class=\"p\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s\">&#34;, &#34;</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"s\">&#34;&#34;</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"p\">};</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">suspended_cards_str</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">filter_out_suspended_cards</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"s\">&#34;AND queue != -1&#34;</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"s\">&#34;&#34;</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"p\">};</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">current_timestamp</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Utc</span>::<span class=\"n\">now</span><span class=\"p\">().</span><span class=\"n\">timestamp</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"mi\">1000</span><span class=\"p\">;</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">query</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">format</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"err\">&#34;</span><span class=\"n\">SELECT</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> \n</span><span class=\"w\">         </span><span class=\"n\">FROM</span><span class=\"w\"> </span><span class=\"n\">revlog</span><span class=\"w\"> \n</span><span class=\"w\">         </span><span class=\"n\">WHERE</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"n\">OR</span><span class=\"w\"> </span><span class=\"n\">ivl</span><span class=\"w\"> </span><span class=\"o\">&lt;=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"w\">         </span><span class=\"n\">AND</span><span class=\"w\"> </span><span class=\"n\">id</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\">\n</span><span class=\"w\">         </span><span class=\"n\">AND</span><span class=\"w\"> </span><span class=\"n\">cid</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\">\n</span><span class=\"w\">         </span><span class=\"n\">AND</span><span class=\"w\"> </span><span class=\"n\">cid</span><span class=\"w\"> </span><span class=\"n\">IN</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"w\">\n</span><span class=\"w\">             </span><span class=\"n\">SELECT</span><span class=\"w\"> </span><span class=\"n\">id</span><span class=\"w\">\n</span><span class=\"w\">             </span><span class=\"n\">FROM</span><span class=\"w\"> </span><span class=\"n\">cards</span><span class=\"w\">\n</span><span class=\"w\">             </span><span class=\"n\">WHERE</span><span class=\"w\"> </span><span class=\"n\">queue</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\">\n</span><span class=\"w\">             </span><span class=\"p\">{}</span><span class=\"w\">\n</span><span class=\"w\">             </span><span class=\"p\">{}</span><span class=\"w\">\n</span><span class=\"w\">         </span><span class=\"p\">)</span><span class=\"err\">&#34;</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"n\">current_timestamp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">current_timestamp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">suspended_cards_str</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">flags_str</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"p\">);</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">revlogs</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">db</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">prepare_cached</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">query</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">query_and_then</span><span class=\"p\">([],</span><span class=\"w\"> </span><span class=\"n\">row_to_revlog_entry</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">collect</span>::<span class=\"o\">&lt;</span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">RevlogEntry</span><span class=\"o\">&gt;&gt;&gt;</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">revlogs</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"k\">fn</span> <span class=\"nf\">group_by_cid</span><span class=\"p\">(</span><span class=\"n\">revlogs</span>: <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">RevlogEntry</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">RevlogEntry</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">grouped</span>: <span class=\"nc\">HashMap</span><span class=\"o\">&lt;</span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">RevlogEntry</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">HashMap</span>::<span class=\"n\">new</span><span class=\"p\">();</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">revlog</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">revlogs</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"n\">grouped</span><span class=\"w\">\n</span><span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">entry</span><span class=\"p\">(</span><span class=\"n\">revlog</span><span class=\"p\">.</span><span class=\"n\">cid</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">or_insert_with</span><span class=\"p\">(</span><span class=\"nb\">Vec</span>::<span class=\"n\">new</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">push</span><span class=\"p\">(</span><span class=\"n\">revlog</span><span class=\"p\">);</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">grouped</span><span class=\"p\">.</span><span class=\"n\">into_iter</span><span class=\"p\">().</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"p\">)</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"p\">).</span><span class=\"n\">collect</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"k\">fn</span> <span class=\"nf\">convert_to_date</span><span class=\"p\">(</span><span class=\"n\">timestamp</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">next_day_starts_at</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">timezone</span>: <span class=\"nc\">Tz</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">chrono</span>::<span class=\"n\">NaiveDate</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">timestamp_seconds</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">timestamp</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">next_day_starts_at</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"mi\">3600</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"mi\">1000</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// 剪去指定小时数\n</span><span class=\"c1\"></span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">datetime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Utc</span><span class=\"p\">.</span><span class=\"n\">timestamp_millis_opt</span><span class=\"p\">(</span><span class=\"n\">timestamp_seconds</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">().</span><span class=\"n\">with_timezone</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">timezone</span><span class=\"p\">);</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">datetime</span><span class=\"p\">.</span><span class=\"n\">date_naive</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"k\">fn</span> <span class=\"nf\">extract_time_series_feature</span><span class=\"p\">(</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">entries</span>: <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">RevlogEntry</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">next_day_starts_at</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">timezone</span>: <span class=\"nc\">Tz</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">RevlogEntry</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"c1\">// 寻找最后一组连续 review_kind = 0 的第一个 RevlogEntry 的索引\n</span><span class=\"c1\"></span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">index_to_keep</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">entries</span><span class=\"p\">.</span><span class=\"n\">len</span><span class=\"p\">();</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">-=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">entries</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">review_kind</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">            </span><span class=\"n\">index_to_keep</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"p\">;</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">index_to_keep</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">            </span><span class=\"k\">break</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// 找到了连续的 review_kind = 0 的组，退出循环\n</span><span class=\"c1\"></span><span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"c1\">// 删除此 RevlogEntry 之前的所有条目\n</span><span class=\"c1\"></span><span class=\"w\">    </span><span class=\"n\">entries</span><span class=\"p\">.</span><span class=\"n\">drain</span><span class=\"p\">(..</span><span class=\"n\">index_to_keep</span><span class=\"p\">);</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"c1\">// 去掉 review_kind = 4 的 RevlogEntry\n</span><span class=\"c1\"></span><span class=\"w\">    </span><span class=\"n\">entries</span><span class=\"p\">.</span><span class=\"n\">retain</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">entry</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">entry</span><span class=\"p\">.</span><span class=\"n\">review_kind</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">);</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"c1\">// 去掉 review_kind = 3 且 ease_factor = 0 的 RevlogEntry\n</span><span class=\"c1\"></span><span class=\"w\">    </span><span class=\"n\">entries</span><span class=\"p\">.</span><span class=\"n\">retain</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">entry</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">entry</span><span class=\"p\">.</span><span class=\"n\">review_kind</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">entry</span><span class=\"p\">.</span><span class=\"n\">ease_factor</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">);</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"c1\">// 将所有 review_kind + 1\n</span><span class=\"c1\"></span><span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">entry</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">entries</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"n\">entry</span><span class=\"p\">.</span><span class=\"n\">review_kind</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"c1\">// 转换时间戳并保留每个日期的第一个 RevlogEntry\n</span><span class=\"c1\"></span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">unique_dates</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">collections</span>::<span class=\"n\">HashSet</span>::<span class=\"n\">new</span><span class=\"p\">();</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">entries</span><span class=\"p\">.</span><span class=\"n\">retain</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">entry</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">date</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">convert_to_date</span><span class=\"p\">(</span><span class=\"n\">entry</span><span class=\"p\">.</span><span class=\"n\">id</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">next_day_starts_at</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">timezone</span><span class=\"p\">);</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"n\">unique_dates</span><span class=\"p\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">date</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"p\">});</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"c1\">// 计算其余 RevlogEntry 的 delta_t\n</span><span class=\"c1\"></span><span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">..</span><span class=\"n\">entries</span><span class=\"p\">.</span><span class=\"n\">len</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">date_current</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">convert_to_date</span><span class=\"p\">(</span><span class=\"n\">entries</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">id</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">next_day_starts_at</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">timezone</span><span class=\"p\">);</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">date_previous</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">convert_to_date</span><span class=\"p\">(</span><span class=\"n\">entries</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">].</span><span class=\"n\">id</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">next_day_starts_at</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">timezone</span><span class=\"p\">);</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"n\">entries</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">delta_t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">date_current</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">date_previous</span><span class=\"p\">).</span><span class=\"n\">num_days</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">;</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"c1\">// 计算 i, r_history, t_history\n</span><span class=\"c1\"></span><span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">..</span><span class=\"n\">entries</span><span class=\"p\">.</span><span class=\"n\">len</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"n\">entries</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// 位置从 1 开始\n</span><span class=\"c1\"></span><span class=\"w\">        </span><span class=\"c1\">// 除了第一个条目，其余条目将前面的 button_chosen 和 delta_t 加入 r_history 和 t_history\n</span><span class=\"c1\"></span><span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">            </span><span class=\"n\">entries</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">r_history</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">entries</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">..</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">iter</span><span class=\"p\">().</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">e</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">button_chosen</span><span class=\"p\">).</span><span class=\"n\">collect</span><span class=\"p\">();</span><span class=\"w\">\n</span><span class=\"w\">            </span><span class=\"n\">entries</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">t_history</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">entries</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">..</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">iter</span><span class=\"p\">().</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">e</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">delta_t</span><span class=\"p\">).</span><span class=\"n\">collect</span><span class=\"p\">();</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"c1\">// 找到 review_kind = 0 且前一个 RevlogEntry 的 review_kind 是 1 或 2 的 RevlogEntry，然后删除其及其之后的所有 RevlogEntry\n</span><span class=\"c1\"></span><span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">index_to_remove</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">entries</span><span class=\"p\">.</span><span class=\"n\">windows</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">).</span><span class=\"n\">enumerate</span><span class=\"p\">().</span><span class=\"n\">find_map</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">window</span><span class=\"p\">)</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"n\">review_kind</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">window</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"n\">review_kind</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">window</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">].</span><span class=\"n\">review_kind</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">            </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"c1\">// 返回第一个符合条件的 RevlogEntry 的索引\n</span><span class=\"c1\"></span><span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">            </span><span class=\"nb\">None</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"p\">})</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"n\">entries</span><span class=\"p\">.</span><span class=\"n\">truncate</span><span class=\"p\">(</span><span class=\"n\">index_to_remove</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// 截取从 0 到 index_to_remove 的部分，删除其后的所有条目\n</span><span class=\"c1\"></span><span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">entries</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"k\">fn</span> <span class=\"nf\">convert_to_fsrs_items</span><span class=\"p\">(</span><span class=\"n\">revlogs</span>: <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">RevlogEntry</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">FSRSItem</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">revlogs</span><span class=\"p\">.</span><span class=\"n\">into_iter</span><span class=\"p\">().</span><span class=\"n\">flat_map</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">group</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"n\">group</span><span class=\"p\">.</span><span class=\"n\">into_iter</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">entry</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">entry</span><span class=\"p\">.</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"c1\">// 过滤掉 i = 1 的 RevlogEntry\n</span><span class=\"c1\"></span><span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">entry</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">            </span><span class=\"n\">FSRSItem</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">                </span><span class=\"n\">t_history</span>: <span class=\"nc\">entry</span><span class=\"p\">.</span><span class=\"n\">t_history</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">                </span><span class=\"n\">r_history</span>: <span class=\"nc\">entry</span><span class=\"p\">.</span><span class=\"n\">r_history</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">                </span><span class=\"n\">delta_t</span>: <span class=\"nc\">entry</span><span class=\"p\">.</span><span class=\"n\">delta_t</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kt\">f32</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">                </span><span class=\"n\">label</span>: <span class=\"nc\">match</span><span class=\"w\"> </span><span class=\"n\">entry</span><span class=\"p\">.</span><span class=\"n\">button_chosen</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">                    </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"mf\">0.0</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">                    </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"mf\">1.0</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"w\">                    </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">panic</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">&#34;Unexpected value for button_chosen&#34;</span><span class=\"p\">),</span><span class=\"w\">\n</span><span class=\"w\">                </span><span class=\"p\">},</span><span class=\"w\">\n</span><span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"p\">})</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"p\">}).</span><span class=\"n\">collect</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"k\">fn</span> <span class=\"nf\">remove_non_learning_first</span><span class=\"p\">(</span><span class=\"n\">revlogs_per_card</span>: <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">RevlogEntry</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">RevlogEntry</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">revlogs_per_card</span><span class=\"p\">;</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">retain</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">entries</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">first_entry</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">entries</span><span class=\"p\">.</span><span class=\"n\">first</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">            </span><span class=\"n\">first_entry</span><span class=\"p\">.</span><span class=\"n\">review_kind</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">            </span><span class=\"kc\">false</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"p\">});</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">result</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">anki_to_fsrs</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">FSRSItem</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">revlogs</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">read_collection</span><span class=\"p\">();</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">revlogs_per_card</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">group_by_cid</span><span class=\"p\">(</span><span class=\"n\">revlogs</span><span class=\"p\">);</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">extracted_revlogs_per_card</span>: <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">RevlogEntry</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">revlogs_per_card</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">into_iter</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">entries</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">extract_time_series_feature</span><span class=\"p\">(</span><span class=\"n\">entries</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Tz</span>::<span class=\"n\">Asia__Shanghai</span><span class=\"p\">))</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">collect</span><span class=\"p\">();</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">filtered_revlogs_per_card</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">remove_non_learning_first</span><span class=\"p\">(</span><span class=\"n\">extracted_revlogs_per_card</span><span class=\"p\">);</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fsrs_items</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">convert_to_fsrs_items</span><span class=\"p\">(</span><span class=\"n\">filtered_revlogs_per_card</span><span class=\"p\">);</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">fsrs_items</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"cp\">#[test]</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"k\">fn</span> <span class=\"nf\">test</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">revlogs</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">read_collection</span><span class=\"p\">();</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">dbg</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">revlogs</span><span class=\"p\">.</span><span class=\"n\">len</span><span class=\"p\">());</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">revlogs_per_card</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">group_by_cid</span><span class=\"p\">(</span><span class=\"n\">revlogs</span><span class=\"p\">);</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">dbg</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">revlogs_per_card</span><span class=\"p\">.</span><span class=\"n\">len</span><span class=\"p\">());</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">extracted_revlogs_per_card</span>: <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">RevlogEntry</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">revlogs_per_card</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">into_iter</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">entries</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">extract_time_series_feature</span><span class=\"p\">(</span><span class=\"n\">entries</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Tz</span>::<span class=\"n\">Asia__Shanghai</span><span class=\"p\">))</span><span class=\"w\">\n</span><span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">collect</span><span class=\"p\">();</span><span class=\"w\">\n</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">dbg</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">extracted_revlogs_per_card</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]);</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">extracted_revlogs_per_card</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">remove_non_learning_first</span><span class=\"p\">(</span><span class=\"n\">extracted_revlogs_per_card</span><span class=\"p\">);</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">dbg</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">extracted_revlogs_per_card</span><span class=\"p\">.</span><span class=\"n\">iter</span><span class=\"p\">().</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">x</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">len</span><span class=\"p\">()).</span><span class=\"n\">sum</span>::<span class=\"o\">&lt;</span><span class=\"kt\">usize</span><span class=\"o\">&gt;</span><span class=\"p\">());</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fsrs_items</span>: <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">FSRSItem</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">convert_to_fsrs_items</span><span class=\"p\">(</span><span class=\"n\">extracted_revlogs_per_card</span><span class=\"p\">);</span><span class=\"w\">\n</span><span class=\"w\">    </span><span class=\"n\">dbg</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">fsrs_items</span><span class=\"p\">.</span><span class=\"n\">len</span><span class=\"p\">());</span><span class=\"w\">\n</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div><p data-pid=\"jat3kS9p\">目前项目已经完成了从 Anki 的数据库读取复习记录，转换为数据集样本，训练 FSRS 模型的整个流程。编译出来也只有十几 MB，未来有望整合入 Anki 的 Rust 后端，实现同时在 PC、iOS 和 Android 三端上跑机器学习训练。</p><p data-pid=\"nBbEfvkq\">也欢迎 Rust 大佬来本项目贡献代码，推进间隔重复领域的发展：</p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/open-spaced-repetition/fsrs-optimizer-burn\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">open-spaced-repetition/fsrs-optimizer-burn: Rust-based Optimizer for FSRS (github.com)</a><p data-pid=\"fye122R3\">更多有关 FSRS 的介绍，请见：</p><a href=\"https://zhuanlan.zhihu.com/p/577383961\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-337e676d732039a25471c1057c54bfa3_180x120.jpg\" data-image-width=\"2700\" data-image-height=\"1480\" class=\"internal\">叶峻峣：KDD&#39;22 | 墨墨背单词：基于时序模型与最优控制的记忆算法 [AI+教育]</a><a href=\"https://zhuanlan.zhihu.com/p/649655080\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-9c14ae073ac7ff2f3d208d31b0ed10b2_180x120.jpg\" data-image-width=\"2638\" data-image-height=\"1304\" class=\"internal\">叶峻峣：解释 FSRS（上篇）：算法描述与运作原理</a><a href=\"https://zhuanlan.zhihu.com/p/649701172\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-e9f56ba072166b28b7c371e246a79fc5_180x120.jpg\" data-image-width=\"2638\" data-image-height=\"1304\" class=\"internal\">叶峻峣：解释 FSRS（下篇）：准确度</a><p></p>",
  "content_need_truncated": false,
  "created_time": 1692523304,
  "excerpt": "Anki（一款开源的间隔重复软件）大概算半个吧： [图片] 语言成分极其复杂（Rust 和 Python 加起来占了四分之三以上）： [图片] 以前的主体是 PyQt，现在已经将大部分底层代码用 Rust 重写了。 拜它所赐，我本来一个臭写 Python 的，现在天天被 Rust 精神注入。 不过还好有 GPT-4，可以帮我写 Rust 代码，而且效果还不错： [图片] [图片] [图片] 一个晚上就写完了从 Anki 的 sqlite 数据库构建 FSRS 数据集的代码： [图片] use chrono::prelude::*; use chrono_tz::Tz; use r…",
  "id": 3174376277,
  "is_jump_native": false,
  "link_card_info": {
    "https://zhuanlan.zhihu.com/p/577383961": "{\"card_type\":\"card_1\",\"display\":{\"title\":\"KDD'22 | 墨墨背单词：基于时序模型与最优控制的记忆算法 [AI+教育]\",\"card_open_url\":\"https://zhuanlan.zhihu.com/p/577383961\",\"desc\":\"477 赞同 · 91 评论 \\u003ca class=\\\"tag type_a\\\"\\u003e文章\\u003c/a\\u003e\",\"content\":\"\\u003ca class=\\\"text normal/bold\\\" data-color=\\\"#444444\\\" data-night-color=\\\"#D3D3D3\\\"\\u003eThoughts Memo:\\u003c/a\\u003e 大家好，我是叶峻峣，墨墨科技的记忆算法工程师。前三篇文章我分别介绍了我的科研经历 [1]、算法教程[2]和研究资源[3]。今天分享一下记忆算法论文 A Stochastic Shortest Path Algorithm for Optimizing Spaced Repetition Scheduling 的详细介绍，该论文由我和哈工深的苏敬勇老师、墨墨背单词的曹译珑博士在 KDD 2022 上发表，研究了如何在背单词场景下对用户复习规划进行优化的问题。与以往的同类工作不同的是，本文构建了包含…\",\"image\":{\"image_url\":\"https://picx.zhimg.com/v2-337e676d732039a25471c1057c54bfa3_r.jpg?source=172ae18b\",\"ratio\":1,\"is_video\":false},\"bg_type\":\"dark\"},\"source\":{\"content_type\":\"ARTICLE\",\"content_id\":\"577383961\"},\"za_data\":{\"attach_info\":\"\"}}",
    "https://zhuanlan.zhihu.com/p/649655080": "{\"card_type\":\"card_1\",\"display\":{\"title\":\"解释 FSRS（上篇）：算法描述与运作原理\",\"card_open_url\":\"https://zhuanlan.zhihu.com/p/649655080\",\"desc\":\"87 赞同 · 42 评论 \\u003ca class=\\\"tag type_a\\\"\\u003e文章\\u003c/a\\u003e\",\"content\":\"\\u003ca class=\\\"text normal/bold\\\" data-color=\\\"#444444\\\" data-night-color=\\\"#D3D3D3\\\"\\u003eThoughts Memo:\\u003c/a\\u003e 如果你正在使用 Anki 但还没听说过 FSRS ，那我来简单地给你介绍一下：它是一个新的调度算法，比 Anki 的默认算法更加灵活、准确。最近，FSRS 的新版本已经发布，它比之前更加精确，因此我决定写两篇关于 FSRS 的文章。注：我并不是 FSRS 的开发者。我只是一个在 GitHub 上经常提交错误报告和功能请求的普通人。但我对 FSRS 非常了解，特别是 v4 版本的很多改动，都是我一手提议的。（校对：这人提了几十个 issue，累死我了）等级…\",\"image\":{\"image_url\":\"https://picx.zhimg.com/v2-9c14ae073ac7ff2f3d208d31b0ed10b2_r.jpg?source=172ae18b\",\"ratio\":1,\"is_video\":false},\"bg_type\":\"dark\"},\"source\":{\"content_type\":\"ARTICLE\",\"content_id\":\"649655080\"},\"za_data\":{\"attach_info\":\"\"}}",
    "https://zhuanlan.zhihu.com/p/649701172": "{\"card_type\":\"card_1\",\"display\":{\"title\":\"解释 FSRS（下篇）：准确度\",\"card_open_url\":\"https://zhuanlan.zhihu.com/p/649701172\",\"desc\":\"56 赞同 · 49 评论 \\u003ca class=\\\"tag type_a\\\"\\u003e文章\\u003c/a\\u003e\",\"content\":\"\\u003ca class=\\\"text normal/bold\\\" data-color=\\\"#444444\\\" data-night-color=\\\"#D3D3D3\\\"\\u003eThoughts Memo:\\u003c/a\\u003e 如果你还没有读过上篇，我建议你先读一读： [文章: 解释 FSRS（上篇）：算法描述与运作原理] 注：我并不是 FSRS 的开发者。我只是一个在 GitHub 上经常提交错误报告和功能请求的普通人。但我对 FSRS 非常了解，特别是新版本的很多改动，都是我一手提议的。（校对：这人提了几十个 issue，累死我了）很多人都对 FSRS 的复杂性抱有疑虑，质疑它是否真的能比 Anki 的简易算法更准确。许多人觉得 Anki 设置的复习间隔已经够好了（但这…\",\"image\":{\"image_url\":\"https://pic1.zhimg.com/v2-e9f56ba072166b28b7c371e246a79fc5_r.jpg?source=172ae18b\",\"ratio\":1,\"is_video\":false},\"bg_type\":\"dark\"},\"source\":{\"content_type\":\"ARTICLE\",\"content_id\":\"649701172\"},\"za_data\":{\"attach_info\":\"\"}}"
  },
  "question": {
    "created": 1642491714,
    "detail": "",
    "id": 512163948,
    "question_type": "normal",
    "relationship": {},
    "title": "Github上有哪些Rust写的知名项目？",
    "type": "question",
    "updated_time": 1642492637,
    "url": "https://api.zhihu.com/questions/512163948"
  },
  "relationship": {
    "upvoted_followees": []
  },
  "type": "answer",
  "voteup_count": 170
}