{
  "answer_type": "normal",
  "author": {
    "avatar_url": "https://pic1.zhimg.com/v2-41f893b0cd84fb6a8c8f6d1bd29c9554_l.jpg?source=2c26e567",
    "avatar_url_template": "https://pica.zhimg.com/v2-41f893b0cd84fb6a8c8f6d1bd29c9554.jpg?source=2c26e567",
    "badge": [
      {
        "description": "信息技术行业 算法工程师",
        "topics": [],
        "type": "identity"
      }
    ],
    "badge_v2": {
      "detail_badges": [
        {
          "description": "知势榜教育校园领域影响力榜答主",
          "detail_type": "super_activity",
          "icon": "https://picx.zhimg.com/v2-4a07bc69c4bb04444721f35b32125c75_l.png?source=32738c0c",
          "night_icon": "https://pic1.zhimg.com/v2-4a07bc69c4bb04444721f35b32125c75_l.png?source=32738c0c",
          "sources": [
            {
              "avatar_path": "",
              "avatar_url": "",
              "description": "",
              "id": "27",
              "name": "知势榜8月",
              "priority": 27,
              "token": "",
              "type": "content_potential_category",
              "url": ""
            }
          ],
          "title": "社区成就",
          "type": "reward",
          "url": ""
        },
        {
          "description": "信息技术行业 算法工程师",
          "detail_type": "identity_people",
          "icon": "https://picx.zhimg.com/v2-2ddc5cc683982648f6f123616fb4ec09_l.png?source=32738c0c",
          "night_icon": "https://picx.zhimg.com/v2-2ddc5cc683982648f6f123616fb4ec09_l.png?source=32738c0c",
          "sources": [],
          "title": "已认证的个人",
          "type": "identity",
          "url": "https://zhuanlan.zhihu.com/p/96956163"
        }
      ],
      "icon": "https://picx.zhimg.com/v2-27bfcba90e66db79ce8768ab807e017e_l.png?source=32738c0c",
      "merged_badges": [
        {
          "description": "知势榜教育校园领域影响力榜答主",
          "detail_type": "best",
          "icon": "",
          "night_icon": "",
          "sources": [],
          "title": "社区成就",
          "type": "best",
          "url": ""
        },
        {
          "description": "信息技术行业 算法工程师",
          "detail_type": "identity",
          "icon": "",
          "night_icon": "",
          "sources": [],
          "title": "认证",
          "type": "identity",
          "url": "https://zhuanlan.zhihu.com/p/96956163"
        }
      ],
      "night_icon": "https://picx.zhimg.com/v2-27bfcba90e66db79ce8768ab807e017e_l.png?source=32738c0c",
      "title": "知势榜教育校园领域影响力榜答主"
    },
    "gender": 1,
    "headline": "在Anki制作2.9万张卡片，复习33万次。Anki高考践行者、推广者。",
    "id": "4c592f496dc33822b560b382907ff1d0",
    "is_advertiser": false,
    "is_org": false,
    "is_privacy": false,
    "name": "Thoughts Memo",
    "type": "people",
    "url": "https://api.zhihu.com/people/4c592f496dc33822b560b382907ff1d0",
    "url_token": "L.M.Sherlock",
    "user_type": "people"
  },
  "biz_ext": {},
  "comment_count": 3,
  "content": "<p data-pid=\"Q3yyQYZG\">是的，但制卡对高效利用 Anki 非常重要。Anki 也是一种 SRS（Spaced Repetition System，间隔重复系统），它的特点就是「垃圾进，垃圾出」，这个特点非常明显：如果你输入的材料不够有用，或者不是在测试你想知道的东西，你能记住这些材料，但这些材料毫无用场；你复习它们就是浪费时间。这对用户来说是挑战，因为卡片问问题的方式失之毫厘，相对于你想测试的东西就谬之千里。</p><p data-pid=\"nZRN-R9N\">SRS 很像传说中的精灵：以错误的方式描述你想得到的东西，精灵会以最荒谬的方式解释你的愿望，你会学到一些没有实际用途的东西。例如，我最近在自己的卡片集合中发现了一张卡片，间隔长度为数年，其问题是使用 <code>cp</code> (copy，复制) 这一 Unix 命令的哪个选项，这条命令在覆盖现有文件之前会要求确认。我能很轻松答出正解：「<code>cp -i</code>」，但我一回答便意识到我完全忘记了 <code>cp</code> 一开始就有这样一个选项，所以当这个选项有用时，我绝不会想到要使用它，这些信息对我来说几乎毫无价值。在其他情况下，你可能最终记住了你的卡片上的一个语法错误，或者记住了对某个卡片问题作出的反应，而这个问题在现实生活中是永远不会遇到的。</p><p data-pid=\"_X5aIUHp\">换句话说，SRS 的问题是容易出现<b>过拟合</b>。在统计建模和机器学习中，<a href=\"https://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Overfitting\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">过拟合</a>发生在模型对训练数据的预测「过于准确」时——它开始将训练数据中的随机噪声视为有意义的预测来源。当然，随机噪声无法表示任何有意义的关系，这对预测新信息毫无用处。因此，过拟合提高了模型在训练数据上的准确率，但当应用于新数据，即现实世界场景时，其准确率反而会降低。在间隔重复的场景中，由于 SRS 非常擅长帮助你高效学习几乎所有东西，它将优化你对任何东西的记忆，但如果你没有正确表述你的问题，它会帮助你记住无关的信息或随机噪声，而不是你真正想知道的信息。</p><p data-pid=\"iRDwU2Il\">为了避免过拟合，添加卡片时的头号规则是：每当你遇到想记住的东西时，<b>请明确你想要知道的是什么</b>，并尽可能精确地描述它。只有在这个时候，你才能编写一张或多张提出具体问题的卡片。这比直接把信息灌入抽认卡中更难，也使初期的学习过程更长，但效果要好得多！这个过程可以帮助你更好地学习。作为额外好处，这个过程甚至在你开始复习卡片之前就帮助你理解和记忆信息：它迫使你反思这些信息对你的确切含义，你什么时候需要使用它，以及它与你已知事物的关系。这是一种附带的记忆技巧，被称为<b>精细编码</b>，它被公认为是学习事物最有效的方法之一——而你在编写你的抽认卡时，就已经免费地享受到了这一技巧带来的好处!</p><p data-pid=\"Ur2Srz91\">本文接下来将列出一些规则，本文的剩余部分将列出一些规则，。虽然其中有一两个例子是我编的，但绝大多数都是今天我从我的学习集合中选出的真实卡片，以证明几乎每个间隔重复使用者的橱柜里都有这样的「骨头」（许多是我较旧的卡片，但也有几张是比较新的）。</p><h2>问题应该只问一件事</h2><p data-pid=\"7AicT10G\"><a href=\"https://link.zhihu.com/?target=http%3A//super-memory.com/articles/20rules.htm\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">20 规则</a>的第 4 条称之为<b>最小信息原则</b>：一张卡片问的东西不应超过一个（技术专家可能会说卡片要<b>原子化</b>）。违反这一规则不仅仅是字面上同时问两个问题那么直接。更多时候，它体现在提问非常笼统，而回答非常冗长：</p><blockquote data-pid=\"-8MxXGVq\">问：简述 Python 编程语言。<br/>答：Python 是由 Guido van Rossum 创建，并由 Python 基金会维护的一种高阶、解释型、多范式的编程语言。它广泛应用于系统管理、数据分析和快速原型开发等领域，在近年来的编程语言人气排行中始终名列前五。</blockquote><p data-pid=\"LBVyPAPJ\">这张卡片很糟糕！我不是说你不应该了解 Python ，也不是说这张卡片的信息组织地很差。我只是说这张卡片信息太多了。除非你的目的是逐字记住答案，否则你永远不可能准确地根据这个模糊的问题来回忆所有信息。如果你忘记了答案中的任何部分，你只能反馈忘记（这样一来，由于你永远也学不完所有内容，这张卡片几乎每天都会回来）或者在没有完全记住的情况下骗自己记得很好。我们可以轻松地将其分解为十几个问题，例如：</p><blockquote data-pid=\"wMVHn7PK\">问：谁设计了 Python 编程语言？<br/>答：Guido von Rossum.<br/><br/>问：什么团体在维护 Python 编程语言？<br/>答：Python 基金会。<br/><br/>问：自 2015 年以来，Python 在编程语言人气排行中始终名列前[...数字]。<br/>答：5</blockquote><p data-pid=\"mAkJiUBt\">诸如此类。</p><p data-pid=\"Ol6C3Aso\">另外值得一提的是，那个最初的 「简述」可能包含了我们本来就不想知道的信息，不应该浪费时间去学习。将我们要学习的内容拆分成多个问题，正好能决定什么是需要记住的，这样我们就可以集中精力在最有价值的信息上。花时间学习一条信息，就没时间学其他信息。所以，请明智选择。</p><h2>问题应该只能有一种回答</h2><p data-pid=\"-8jwV2g-\">为了高效复习，必须让人一眼就能看出问题在问什么，以及什么样的回答才能算作正确答案；每次复习时，你的思考过程和答案必须有相同的意思，措辞不一致倒没关系。这似乎很简单，但大多数初学者经常制作违反其中一两条规则的卡片。糟糕的是，即使是专家有时也会犯错。违反这一规则的方式有很多种；让我们看看三种常见的方式。</p><h3>允许正确但不相关的答案</h3><p data-pid=\"ZCQxAmpv\">这是我的美国历史 AP 课程牌组中的一个填空题（9 年前做的！）。在我的填空题记号中，{花括号}中的部分在卡片的正面显示为 <code>[...]</code>，要求你填空；然后整个句子会在卡片背面显示出来。</p><blockquote data-pid=\"vEJuEHL-\">《邦联条款》无权监管{商业}。</blockquote><p data-pid=\"KGt_m5DZ\">确实如此，这是一个要点（缺乏商业监管是推动美国宪法创立的重要问题之一，而美国宪法是在邦联条款之后制定的）。然而，我们可以给出几乎无限多的其他正确答案！邦联条款同样没有权力管控宗教活动、税收、猎熊、英国君主的行为，或是你邻居开窗打鼓的时间。显然，这些答案有的比较合理，有的则不然。但关键是，我完全可以给出一个符合事实但并非卡片背面所指的答案。</p><p data-pid=\"fYswiPFc\">如果在复习时遇到这种情况，我就会陷入两难：是应该因为答对而通过这张卡片呢，还是因为没回答出我本意想要记住的信息而挂掉它呢？不管哪种选择，我都无法有效地复习我打算学习的知识点。反而，我还得额外记住这<b>张卡片究竟想要问什么</b>，这就相当于同时问了两个问题，增加了记忆难度，而这对我来说毫无帮助——因为在现实生活中，知道一张 Anki 卡片的意图对我来说毫无用处。</p><p data-pid=\"QpoJqBGy\">在复习时遇到这种情况，正确的做法是暂停复习，重新编写这张卡片。这可以通过多种方式实现，比如：</p><blockquote data-pid=\"2iVUEZrz\">《邦联条款》未授予任何{监管商业}的权力，因此在邦联条款下的各州之间的经济和贸易关系面临困难。</blockquote><p data-pid=\"mXkH-juS\">当然了，如果我想故意找茬，仍然可以想出一些奇怪的答案（故意找茬有时也挺有意思的）。但如果我是真心实意地去理解问题，现在我可以相当确定，如果我没能迅速想起我原先设定的答案，那大概就是我忘了。</p><h3>陷入「例子 」陷阱</h3><p data-pid=\"SuyQlTYb\">卡片新手经常写出这样的问题：</p><blockquote data-pid=\"PSq9rk-3\">问：举一个非组合电路的例子。<br/>答：内存。</blockquote><p data-pid=\"fGyXZ1V9\">这只是「允许正确但不相关的答案」问题的一个特例，但因为它非常常见，我特别想强调一下。我们面临的问题和之前一样：不仅我需要记住内存是一种非组合电路（我想要知道的实际信息），我还得记得这张卡片想要我给出的特定非组合电路的例子是「内存」。更糟糕的一个版本是「给出一些非组合电路的例子。」在这个版本中，每次看到这张卡片时，你都可以给出不同的答案，包括那些卡片上没有的，而这些答案还算是那么回事、或许可以说是正确的！</p><p data-pid=\"IFBDArc6\">这是另一个例子。就在几天前，我犯了这个错：</p><blockquote data-pid=\"CPs8SQCW\">问：OutSystems: 举一个你可能会使用输入参数的例子。<br/>答：在编辑界面中，你需要传入要编辑的项目。</blockquote><p data-pid=\"peUw5_f8\">幸运的是，一旦我们认识到这个问题的存在，就很容易将这个问题改写成一种有用的形式：</p><blockquote data-pid=\"neWcl6-1\">问： OutSystems: 你在编辑界面上使用输入参数的用途是？<br/>答：用来传入你需要编辑的项目。</blockquote><p data-pid=\"n9mQUxl5\">然而，<b>例子</b>这个词本身并不意味着你做错了什么；如果正确使用，你卡片上的例子会很棒，就像下面这个问题：</p><blockquote data-pid=\"QaNWJ5dY\">询问为什么猫不能尝到甜味而人类可以，是{功能主义}心理学的一个例子。</blockquote><p data-pid=\"GHwjCtBS\">同样，回到电路问题上，我们可以这样写：</p><blockquote data-pid=\"rk5RfjgC\">内存是{非组合}电路的例子。</blockquote><p data-pid=\"SU0-zs_f\">本质上，我们反转了例子的使用方式。这样的问题不仅更加具体，回答起来也更简单，通常也能提供更实用的知识。在日常生活中，我们很少需要凭空想象一个教材术语的例子，但经常能从识别出某事是某一概念的例子中获益。如果你对某个概念掌握得足够好，能够轻松应对这种问题，那么当需要的时候，你自然也能够轻松给出几个例子。</p><p data-pid=\"AKJlYZsf\"><b>注意</b>：上述两种提问的效果很大程度上取决于你对这些主题的分类体系有多复杂。以内存问题为例，因为我对电路的了解不多，所以对于内存电路被问及的具体性质不会感到迷惑。但如果我是从事电子设计的专业人士，那我可能需要给那张卡片添加一些提示或更多的背景信息，以确保我明白它要求回答的是哪个问题。这也解释了为什么别人制作的卡片很难像自己制作的那样有效：只有你自己最清楚哪些线索能帮你得到最好的效果。</p><h3>容许一个问题有多种解释</h3><p data-pid=\"rAtJXFx0\">对于这类糟糕的问题，出题人没有清晰界定自己想要记忆的内容，导致提出了一个含糊不清的问题。</p><blockquote data-pid=\"od3wQwFb\">APUSH: 当德克萨斯还属于墨西哥管辖时，迁往此地的美国人{并未接受当地的生活方式，心里仍然认为自己是美国人}。</blockquote><p data-pid=\"E8VEdl8U\">关于美国人迁往德克萨斯的话题，难道这就是我<b>唯一</b>想记住的信息吗？当然，即便这个问题很糟糕，我可能还是能够掌握答案（实际上，我对这张卡片的复习几乎全对），但是这个提示太过模糊，我唯一学到的就是「当被问到美国人迁往得克萨斯时我该怎么填空」，这在实际生活中几乎没什么用处。</p><blockquote data-pid=\"uzNbILle\">问：为什么地球的自转在减慢？<br/>答：潮汐减速。</blockquote><p data-pid=\"yDmDD8ni\">这张卡片仍然有问题，但比较难以捉摸。主要是问题所要求的细节程度还不够清楚，是要问描述这一现象的术语吗？（这个术语甚至存在吗？问题本身说明不了这点。），还是让你解释潮汐减速相关的力呢？</p><p data-pid=\"GVTP2P6J\">这样问更好：</p><blockquote data-pid=\"ISra1DQv\">问：什么引力效应导致地球的自转速度随时间推移而减慢？<br/>答：潮汐减速。</blockquote><p data-pid=\"vbHi7SFc\">如果我们不知道什么是潮汐减速，就需要再添加一张甚至几张卡片，来解释这个过程。即使你没有了解这个概念的冲动，也应该添加这些额外的卡片。我们别无选择：不知道这个概念，这张卡片的信息就毫无意义，所以我们<b>不得不</b>知道。即便做卡是为了考试能把这道原题答上来，明白什么意思之后记起来也更轻松。这就是 20 条规则的<a href=\"https://link.zhihu.com/?target=http%3A//super-memory.com/articles/20rules.htm\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">第 1 条</a><sup data-text=\"Anki高考的20条原则(1-5)—来自《有效的学习：组织知识的20条原则》 \" data-url=\"https://zhuanlan.zhihu.com/p/52369009\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\">[1]</sup>：<b>不要学习你不理解的东西。</b></p><p data-pid=\"schNHLTp\">另一个重要的点是，这些卡片可能不会提醒我们地球自转<b>正在</b>减慢（参见我在帖子开头提到的关于 <code>cp -i</code> 的轶事）。也许我们不需要记住这个信息，只需在遇到有地方提到这一事实时，能记住其原因就足够了。但如果我们确实想记住这一点，我们可能还想添加一张卡片来提醒我们，引用我们认为需要记住这个信息的上下文。例如，我们关心地球自转减慢，是因为这意味着需要添加<a href=\"https://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Leap_second\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">闰秒</a>来保持我们的日历与昼夜循环同步：</p><blockquote data-pid=\"HAtkz7z9\">问：为什么 UTC 时间要定时添加闰秒？<br/>答：因为地球自转在逐渐变慢，所以 UTC 会逐渐偏离太阳周期。</blockquote><p data-pid=\"rS5JLoZC\">无论如何，花时间思考想要学习的东西是必要的，这样才能问出正确的问题，用有用的方式编码信息。</p><h2>问题不应该要求你一一列举</h2><p data-pid=\"LBYtZqDe\">在阅读中发现列表时，我们很容易一冲动编写卡片，询问列表的每条项目。<a href=\"https://link.zhihu.com/?target=http%3A//super-memory.com/articles/20rules.htm\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">20 规则</a><sup data-text=\"Anki高考的20条原则(1-5)—来自《有效的学习：组织知识的20条原则》 \" data-url=\"https://zhuanlan.zhihu.com/p/52369009\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\">[1]</sup>中的第 9 和第 10 条规则将其称为<b>集合</b>（有特定顺序的称为<b>枚举</b>）。这些规则解释说，集合型或枚举型卡片是最为棘手且容易答错的，所以要尽可能避免编写这类卡片。</p><p data-pid=\"sqpJnj0V\">编写集合型卡片时，人们往往意识不到这种卡片其实很有问题。他们做这种卡片，是因为集合就摆在眼前，学起来似乎理所当然。他们没有意识到，他们并不需要记住集合。实际上，很少有地方会需要列举全部例子或者部件。然而，有个错觉可能会让人误以为这是有帮助的。以内燃机为例，这是一个典型的复杂机器，部件非常多。如果有人能够列举出内燃机所有部件，他们似乎对其有很深的理解。但这只是一个结果，而非理解的根源。如果你能说出内燃机所有部件的名字，但对它们的功能一无所知，那你其实对它的工作方式一无所知。相反，如果你理解所有部件的功能及其相互关系，即使没有刻意去记住它们的名称，你也能轻松理解发动机的布局，或者根据功能来逐一辨识和描述每个部件。</p><p data-pid=\"5MLv75O3\">当然，偶尔了解一套东西确实很有帮助。在这种情况下，你可以通过以下方式明显提高你的记忆效率：(a) 分别用独立的卡片学习并充分理解这组事物中的每个元素；(b) 将这组元素按顺序排列，并用一些助记技巧，如该顺序的首字母缩写来帮助记忆（我习惯于用两张卡片来坚持最小信息原则，一张问我用的是哪种助记技巧，另一张让我用助记技巧来回忆答案。）<a href=\"https://link.zhihu.com/?target=http%3A//super-memory.com/articles/20rules.htm\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">20 规则</a><sup data-text=\"Anki高考的20条原则(1-5)—来自《有效的学习：组织知识的20条原则》 \" data-url=\"https://zhuanlan.zhihu.com/p/52369009\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\">[1]</sup>中有一个很好的例子，教你如何用这个方法记住欧盟国家，尽管它没有提到用助记技巧。但在你开始高效记忆之前，先思考一下真的需要记住这些东西吗？</p><p data-pid=\"4duKjnNx\">对于逐字记忆诗歌或演讲这类特殊情况，交错挖空的填空题很有用，每张卡片测试一行，最终使你能够在上下文中背诵每一行。我开发过一个颇受欢迎的 Anki 插件 <a href=\"https://link.zhihu.com/?target=https%3A//ankiweb.net/shared/info/2084557901\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">LPCG</a>（歌词/诗歌填空题生成器）可以帮你把这些文本变成卡片。</p><h2>不应该问是否题</h2><p data-pid=\"qMYQ3NXX\">奇怪的是，我发现答案为 「是」或 「否」的问题，比包含更多信息的问题，其实更更难记忆。这些问题往往也很难派上用场。如果你能制作和学习问题更深入的卡片，你不仅能正确回答「是」或 「否」，还会知道更多背后的原因。</p><p data-pid=\"bL9Jn8Dd\">我的计算机硬件设计牌组中的一个例子：</p><blockquote data-pid=\"fFecJbUZ\">问：现代处理器是否使用分段技术？<br/>答：否，这项技术在 x86-64 架构中已被淘汰。</blockquote><p data-pid=\"OkZQ7Lgr\">有趣的是，答案中实际上已经包含了产生更好问题所需的信息。但是，把这类信息放在答案里是个糟糕的做法：你从不需要主动回忆它，而且你看答案的时间只是看问题时间的一小部分，因此你不太可能记住它。作为替代，我们可以重写这张卡片：</p><blockquote data-pid=\"lpksPJCt\">老旧的处理器里分段技术很常见，但从 {x86-64} 架构开始被淘汰。</blockquote><p data-pid=\"egkwW4-X\">请注意，通过学习这个事实（在哪个处理器架构中淘汰了分段技术？），我们仍然知道在最现代的处理器中不再使用分段技术，但我们也确切知道它是在何时被淘汰的，以及哪些类型的处理器可能会用（前提是我们对处理器有所了解，你们可能并不知道！）。</p><p data-pid=\"qwxzRYje\">我们也许会考虑，除了用上述卡片或代替它，还可以编写一张卡片询问<b>为什么</b>在 x86-64 架构上移除了分段技术。这全取决于我们确切想知道什么，但是<b>为什么</b>这类问题通常是有价值的补充。</p><p data-pid=\"sgH55uMY\">尽管如此，我确实发现自己有时仍会编写是否题，特别是当我刚刚开始学习某个主题的时候。有时你还不知道<b>为什么</b>，此刻你只需简单了解某事是或不是，而不用只为了能改进一张抽认卡，去查找并学习一堆细节。也许以后，当你有了更多的理解，你可以重写这张卡片。</p><p data-pid=\"kcScn7aw\">这也带出了一个要点：卡片上的问题并不是固定不变的。很多时候，直到你开始复习这些问题时，你才会发现之前没注意到的问题，有时候，几周或几个月后，当你阅读了完全不同的资料，你可能会发现自己遗漏了一些关键信息，或者发现自己最初的理解完全错误。在复习时，如果发现问题，大胆地去编辑（在Anki中，按 <code>e</code> 可以编辑当前卡片，完成后按 Escape 退出）。如果你发现卡片有问题但暂时不能修正——比如你在用手机复习，需要回家查书才能解决——就用「标记」功能，这样就会给卡片加上「已标记」的标签。有空的时候，尽快处理这些问题——我通常每周会安排时间来做这件事——在卡片浏览器中搜寻标记为 <code>tag:marked</code> 的卡片，然后进行必要的编辑，并取消标记。</p><h2>问题应该是上下文无关的</h2><p data-pid=\"uO6ApLZL\">这里的<b>上下文无关</b>是指一种<a href=\"https://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Context-free_grammar\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">上下文无关文法</a>，也就是说，任何语句的正确解释都与其所处的上下文无关。换句话说，你的问题在没有任何上下文的情况下都是可以理解的；如果你在街上捡到一张写着问题的纸条，你应该能够完全理解这个问题在问什么。这种设计原则主要有两种表现形式。</p><p data-pid=\"FrQZoomL\"><b>（1）应在问题的开头或接近开头的部分明确体现主题或背景</b>，以激活你的记忆，检索出正确的信息，同时便于混合复习来自不同学科的卡片，很多人认为这样做能提高创造力。例如，在我上面提到的几个问题中，你看到了问题开头加上了如 <code>OutSystems:</code> 或 <code>APUSH:</code> 这样的限定词。在句子中嵌入描述主题的词也是可行的，尽管<a href=\"https://link.zhihu.com/?target=http%3A//super-memory.com/articles/20rules.htm\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">第 16 条规则</a>推荐使用前缀，以确保你的大脑能够正确激活。</p><p data-pid=\"P77hPis_\">如果不这样做，你可能经常会误解问题的意思。哪怕是在你写问题的时候，上下文看起来很清楚，等到复习的时候，可能就没那么明显了。实际上，即使你<b>不把</b>不同学科的问题混在一起，也可能会搞混。比如说，我已经不记得多少次，在回答德语或英语或我的缩写时，无意中回答了拉丁语，哪怕之前连续 30 张卡片都是德语的！</p><p data-pid=\"q0xCfYl4\">我的集合里有成千上万张缺乏上下文提示的卡片，我可能还需要几年时间才能注意到并修复所有问题。所以，最好从现在开始就养成这个习惯。哪怕你现在只专注于学习有机化学，也要确保你的问题在更广泛的知识背景内依然能够被理解。</p><p data-pid=\"6OKLmpMn\"><b>（2）不要围绕特定来源设置问题。</b>在卡片上<b>引用</b>资料来源是好的（实际上，以某种方式参考资料来源是极好x的，因为你总会对某张卡片的真实性产生疑问，或仅仅是想要了解更多关于该主题的信息）。然而，像下面这样的问题应该避免：</p><blockquote data-pid=\"jE5zqk44\">统计学：我们课本引言部分的一个重点是，测量{你不知道的东西，或你感到不确定性的地方}是很有用的。</blockquote><p data-pid=\"yWE0r7xa\">首先，这违反了规则 1，因为它仅仅提及了「我们课本」。虽然我现在可能知道它指的是哪本书，但将来可能就记不清了！至于规则 2，我永远不会去想「我大三那年用的统计学课本的引言主要讲了什么？」这个问题的出发点——描述课本内容——毫无卵用，我从这张卡片学到的信息与实际生活毫无关联。</p><p data-pid=\"K9SxZjnS\">希望你能读到这里后，已经开始内化「我想知道什么？」这一思维模式，你会觉得这个问题看起来很糟糕。我个人也是这么认为的。</p><p data-pid=\"CUoszbby\">不留给读者自己练习，我们可以这样改写问题：</p><blockquote data-pid=\"1VI1SrlR\">统计学不只是描述我们已知的东西，还包括将其置于{我们还不知道的部分}的背景中。</blockquote><p data-pid=\"Uz_fB9S8\">请注意不要将这一禁令与另一个非常有用的方式搞混，那就是提问某个作者对某个问题的看法，或者指出某个说法是谁说的。这种方式对资料来源的用法完全不同：它不是把问题<b>限定</b>在作者的书上，而是探讨<b>书中</b>观点的同时说明这个观点来自哪里。例如：</p><blockquote data-pid=\"zUtI1NZI\">问：根据 Cal Newport 的说法，为什么会有很多人同时发现一些概念？<br/>答：这些发现处于「相邻可能」之中，因此很容易被发现。</blockquote><p data-pid=\"UzcUczbK\">当你已经掌握了某个领域的基础知识和实用规则，进入了无法再轻易取得共识的领域，这种提问方式就显得特别重要了。你不应该把观点或者刚出现的理论当作事实去记忆！</p><h2>结论</h2><p data-pid=\"2-6GMcpJ\">希望这些规则对你有所帮助。大多数间隔重复学习的初学者都大大低估了精心设计问题的重要性，而我还没有看到有人在这种细节层面上讨论常见问题。这些规则来自我的亲身经验，但我首先承认，关于编写卡片，我并非全知全能；随着学习时间的增长，我反而意识到自己不懂的事情越来越多！如果其他人有不同的经历或发现了类似的其他规则，我会很感兴趣。</p><p data-pid=\"s26d3F7G\">当然，规则就是用来打破的，尤其是在你获得更多经验后。但如果你一开始就尽力遵循这些规则，你将避开许多常见的陷阱，这些陷阱使得许多人未能发挥间隔重复的潜力。</p><p class=\"ztext-empty-paragraph\"><br/></p><blockquote data-pid=\"Odda0cXO\"><a href=\"https://link.zhihu.com/?target=https%3A//paratranz.cn/projects/3131\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Thoughts Memo</a> 汉化组译制<br/>感谢主要译者 GPT-4，校对 Jarrett Ye、Shom、<span class=\"nolink\">jianglutan</span><br/>原文：<a href=\"https://link.zhihu.com/?target=https%3A//controlaltbackspace.org/memory/designing-precise-cards/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Rules for Designing Precise Anki Cards - Control-Alt-Backspace (controlaltbackspace.org)</a><br/>作者：<b>Soren Bjornstad</b></blockquote><hr/><h2>相关文章</h2><a href=\"https://zhuanlan.zhihu.com/p/434074509\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://picx.zhimg.com/v2-3fc5e91c7a88c26207775c8301afbe1f_180x120.jpg\" data-image-width=\"1579\" data-image-height=\"328\" class=\"internal\">Thoughts Memo：如何写出好卡片：利用间隔重复创造理解</a><a href=\"https://www.zhihu.com/collection/614280525\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">制卡原则与知识表述</a><p></p>",
  "content_need_truncated": false,
  "created_time": 1716606700,
  "excerpt": "是的，但制卡对高效利用 Anki 非常重要。Anki 也是一种 SRS（Spaced Repetition System，间隔重复系统），它的特点就是「垃圾进，垃圾出」，这个特点非常明显：如果你输入的材料不够有用，或者不是在测试你想知道的东西，你能记住这些材料，但这些材料毫无用场；你复习它们就是浪费时间。这对用户来说是挑战，因为卡片问问题的方式失之毫厘，相对于你想测试的东西就谬之千里。 SRS 很像传说中的精灵：以错误的方式描述你想得到的…",
  "id": 3509451425,
  "is_jump_native": false,
  "link_card_info": {
    "https://www.zhihu.com/collection/614280525": "{\"card_type\":\"card_1\",\"display\":{\"title\":\"制卡原则与知识表述\",\"card_open_url\":\"https://www.zhihu.com/collection/614280525\",\"desc\":\"606 关注 · 1.6 万浏览 \\u003ca class=\\\"tag type_a\\\"\\u003e收藏夹\\u003c/a\\u003e\",\"content\":\"收录 22 个内容\",\"image\":{\"image_url\":\"https://picx.zhimg.com/v2-b2918ef3f9c19572ba524ac59316a917_r.jpg?source=2c26e567\",\"ratio\":1,\"is_video\":false},\"bg_type\":\"dark\"},\"source\":{\"content_type\":\"COLLECTION\",\"content_id\":\"614280525\"},\"za_data\":{\"attach_info\":\"\"}}",
    "https://zhuanlan.zhihu.com/p/434074509": "{\"card_type\":\"card_1\",\"display\":{\"title\":\"如何写出好卡片：利用间隔重复创造理解\",\"card_open_url\":\"https://zhuanlan.zhihu.com/p/434074509\",\"desc\":\"1048 赞同 · 134 评论 \\u003ca class=\\\"tag type_a\\\"\\u003e文章\\u003c/a\\u003e\",\"content\":\"\\u003ca class=\\\"text normal/bold\\\" data-color=\\\"#444444\\\" data-night-color=\\\"#D3D3D3\\\"\\u003eThoughts Memo:\\u003c/a\\u003e 译序： 考试里有学习的奥秘？！前苹果系统工程师手把手教学 注：正文中的[数字]表示的是注释，可以善用 Ctrl+F 进行页面内搜索。 本文有两万五千多字，可以在你做卡片时作为参考。小时候，我时常做这样的白日梦，只要像打游戏那样敲对作弊代码，电脑就「哔哔」两声，自动给我打开神奇的世界，让我拥有和游戏主角一样超凡的力量，摆脱这单调乏味的生活。 以上幻想多半是游戏玩太多的缘故，但那神奇的感觉正与我后来使用「间隔重复…\",\"image\":{\"image_url\":\"https://pic1.zhimg.com/v2-3fc5e91c7a88c26207775c8301afbe1f_r.jpg?source=172ae18b\",\"ratio\":1,\"is_video\":false},\"bg_type\":\"dark\"},\"source\":{\"content_type\":\"ARTICLE\",\"content_id\":\"434074509\"},\"za_data\":{\"attach_info\":\"\"}}"
  },
  "question": {
    "created": 1585734025,
    "detail": "<p>教程看得我头大！！我今年考研，不想花太多时间在制作上面，想用来背西综和政治，闲鱼上卖一百多会不会很贵？值得吗？</p>",
    "id": 384325364,
    "question_type": "normal",
    "relationship": {},
    "title": "anki制作卡牌是不是很麻烦？",
    "type": "question",
    "updated_time": 1585734025,
    "url": "https://api.zhihu.com/questions/384325364"
  },
  "relationship": {
    "upvoted_followees": []
  },
  "type": "answer",
  "voteup_count": 119
}